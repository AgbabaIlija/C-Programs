#include <a_samp>
#include <a_mysql>
#include <YSI\y_ini>
#include <YSI_Data\y_iterate>
#include <zcmd>
#include <streamer>
#include <sscanf2>

//***********************DATABASE********************

#define mysql_host "localhost"
#define mysql_user "root"
#define mysql_pass ""
#define mysql_database "pimp_database"

//***********************DIALOG*******************

#define DIALOG_REGISTER 1
#define DIALOG_LOGIN 2
#define DIALOG_SUCCESS_1 3
#define DIALOG_SUCCESS_2 4
 
//**********************BOJE**********************
 
#define COL_WHITE "{FFFFFF}"
#define COL_RED "{F81414}"
#define COL_GREEN "{00FF22}"
#define COL_LIGHTBLUE "{00CED1}"
#define COLOR_GRAY 0xAFAFAFFF
#define COLOR_LIGHTRED 0xFF6347F
#define COL_BLUE 0x4169E1FF

#define boja_bela 0xFFFFFFAA

#define IC_CHAT 1

#define ClearChat(%0) for(new i=0; i<20; i++) SendClientMessage(%0, -1, " ")

new DB:database, DBResult:queryresult, fquery[300];

new MySQL: Database;

new PogresnaLozinka[MAX_PLAYERS];

#define MAX_HOUSES 300 //MAX_HOUSES is currently 300.
#define MAX_HOUSES_PER_PLAYER 2 //MAX_HOUSES_PER_PLAYER is currently 2
#define databasename "housedb.db" //The Databasename is currently housedb.db

#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

enum hinfo
{
    owner[24],
    Hname[100],
    costprice,
    Float:EnterPos[3],
    Float:TelePos[3],
    sellprice,
    interiors,
    Text3D:textid,
    checkpointidx[2]
};

new HouseInformation[MAX_HOUSES][hinfo], houseid;
new InHouse[MAX_PLAYERS], InHouseCP[MAX_PLAYERS];

new GateTimer1[MAX_PLAYERS];
new GateTimer2[MAX_PLAYERS];
new GateTimer3[MAX_PLAYERS];
new Gate1, Gate2, Gate3, Gate4;

new HangarKontenjer1Timer[MAX_PLAYERS];
new HangarKontenjer2Timer[MAX_PLAYERS];
new HangarKontenjer3Timer[MAX_PLAYERS];
new levaVrata1, levaVrata2, levaVrata3, desnaVrata1, desnaVrata2, desnaVrata3, katanac1, katanac2, katanac3, crveniKontenjer, hangarUlazKapija1, hangarUlazKapija2;
new CrveniKontenjerTimer1, CrveniKontenjerTimer2;
new bool:CrveniKontenjerCheck1 = false, bool:CrveniKontenjerCheck2 = false;

new hour, minute, second, Time[9], year, month, day, Date[11];

new rampa1, rampa2, rampa3;

enum PlayerInfo2
{
	ID,
	Name[25],
	Password[65],
	Score,
	Cash,
	Admin,
	Skin,
	Kills,
	Deaths,
	Float:Armor,
	Weapon1,
	Weapon2,
	Weapon3,
	Weapon1Ammo,
	Weapon2Ammo,
	Weapon3Ammo,
	Job,
	JobActivity,
	Phone,
	PhoneNumber
}

new PlayerInfo[MAX_PLAYERS][PlayerInfo2];

enum attached_object_data
{
    Float:ao_x,
    Float:ao_y,
    Float:ao_z,
    Float:ao_rx,
    Float:ao_ry,
    Float:ao_rz,
    Float:ao_sx,
    Float:ao_sy,
    Float:ao_sz
}

new ao[MAX_PLAYERS][MAX_PLAYER_ATTACHED_OBJECTS][attached_object_data];


new bool:PlayerCombatInfo[MAX_PLAYERS] = false;


new Text:timeLabel;
new Text:dateLabel;


new Menu:menuKiosk;

new Injured[MAX_PLAYERS];
new AcceptDeath[MAX_PLAYERS];
new AcceptDeathTimer[MAX_PLAYERS];
new LoseHealthTimer[MAX_PLAYERS];
new Hospitalized[MAX_PLAYERS];

new bool:CarryBox[MAX_PLAYERS] = false;

new GunPrices[47] = {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 5, 5, 5, 5, 5, 5 };

new
    Float: PosX[ MAX_PLAYERS ],
    Float: PosY[ MAX_PLAYERS ],
    Float: PosZ[ MAX_PLAYERS ],
    Float: Angle[ MAX_PLAYERS ],
    Interior[ MAX_PLAYERS ],
    VirtualWorld[ MAX_PLAYERS ]
;


main()
{
        print("\n----------------------------------");
        print(" P.I.M.P beaahbe");
        print("----------------------------------\n");
}
 
public OnGameModeInit()
{
		Database = mysql_connect(mysql_host, mysql_user, mysql_pass, mysql_database);
		if(Database == MYSQL_INVALID_HANDLE || mysql_errno(Database) != 0)
		{
			print("Neuspesno povezivanje sa bazom");
			SendRconCommand("exit");
			return 0;
		}


		ShowNameTags(1);
		DisableInteriorEnterExits();
		ShowPlayerMarkers(0);
		LimitGlobalChatRadius(100.0);
		EnableStuntBonusForAll(0);
		ManualVehicleEngineAndLights();

		SetGameModeText("[P.I.M.P:RP by niggers]"); 
    	
    	   	//---------------------------[SERVER VEHICLES]------------------------------
   	 	AddStaticVehicle(402,1478.9257,-1737.8595,13.2929,270.0982,0,-1);
        AddStaticVehicle(413, 2327.130615, 710.398498, 11.460937, 270.0982, 0, -1);
        CreateVehicle(432,2040.2000000,1358.0000000,10.8000000,0.0000000,0,0,-1); //Rhino
		CreateVehicle(520,276.2000100,2023.6000000,18.3000000,270.2470000,0,0,-1); //Hydra
		CreateVehicle(520,277.2999900,1989.4000000,18.3000000,270.2470000,0,0,-1); //Hydra
		CreateVehicle(520,276.7999900,1955.3000000,18.3000000,270.7470000,0,0,-1); //Hydra
		CreateVehicle(548,339.7000100,1975.6000000,22.4000000,90.5000000,0,0,-1); //Cargobob
		CreateVehicle(425,307.6000100,2046.8000000,18.4000000,200.7500000,0,0,-1); //Hunter
		CreateVehicle(470,212.3999900,1855.3000000,13.0000000,17.7450000,0,0,-1); //Patriot
		CreateVehicle(470,218.1000100,1855.2000000,13.0000000,17.7430000,0,0,-1); //Patriot
		CreateVehicle(470,223.8000000,1855.2000000,12.9000000,17.7430000,0,0,-1); //Patriot
		    //---------------------------[SERVER OBJECT]------------------------------

		//------------VOJNA BAZA-------------------

		Gate1 = CreateObject(10558, 213.7000000, 1875.3000000, 14.2000000, 0.000000, 0.000000, 270.0000000); // object (tbnSFS) (1)
		Gate2 = CreateObject(985,139.1000100,1942.2000000,20.1000000,0.0000000,0.0000000,359.5000000); //object(gate_autor) (1)
		Gate3 = CreateObject(986,131.1000100,1942.3000000,20.1000000,0.0000000,0.0000000,359.5000000); //object(gate_autol) (1)
		Gate4 = CreateObject(985,285.6000100,1820.8000000,18.4000000,0.0000000,0.0000000,270.0000000); //object(gate_autor) (2)
	
		CreateDynamicObject(987,263.7999900,1798.9000000,16.6000000,0.0000000,0.0000000,0.2500000); //object(elecfence_bar)(1)
		CreateDynamicObject(987,251.8000000,1798.9000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(2)
		CreateDynamicObject(987,239.8000000,1798.8000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(3)
		CreateDynamicObject(987,227.8000000,1798.7000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(4)
		CreateDynamicObject(987,215.8999900,1798.7000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(5)
		CreateDynamicObject(987,203.8999900,1798.7000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(8)
		CreateDynamicObject(987,191.8999900,1798.6000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(9)
		CreateDynamicObject(987,179.8999900,1798.5000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(10)
		CreateDynamicObject(987,167.8999900,1798.5000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(11)
		CreateDynamicObject(987,155.8999900,1798.4000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(12)
		CreateDynamicObject(987,143.8999900,1798.3000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(13)
		CreateDynamicObject(987,132.0000000,1798.2000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(14)
		CreateDynamicObject(987,120.0000000,1798.2000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(15)
		CreateDynamicObject(987,108.0000000,1798.1000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(16)
		CreateDynamicObject(987,96.0000000,1798.0000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(17)
		CreateDynamicObject(987,96.3000000,1810.0000000,16.6000000,0.0000000,0.0000000,269.2470000); //object(elecfence_bar)(18)
		CreateDynamicObject(987,96.6000000,1821.9000000,16.6000000,0.0000000,0.0000000,268.7440000); //object(elecfence_bar)(19)
		CreateDynamicObject(987,96.8000000,1833.9000000,16.6000000,0.0000000,0.0000000,268.9920000); //object(elecfence_bar)(20)
		CreateDynamicObject(987,96.9000000,1845.9000000,16.6000000,0.0000000,0.0000000,269.7420000); //object(elecfence_bar)(21)
		CreateDynamicObject(987,96.9000000,1857.9000000,16.6000000,0.0000000,0.0000000,269.7420000); //object(elecfence_bar)(25)
		CreateDynamicObject(987,97.0000000,1869.9000000,16.7000000,0.0000000,0.0000000,269.7420000); //object(elecfence_bar)(26)
		CreateDynamicObject(987,97.0000000,1881.9000000,16.8000000,0.0000000,0.0000000,269.7420000); //object(elecfence_bar)(27)
		CreateDynamicObject(987,97.0000000,1893.9000000,16.9000000,0.0000000,0.0000000,269.9920000); //object(elecfence_bar)(28)
		CreateDynamicObject(987,97.0000000,1905.9000000,17.0000000,0.0000000,0.0000000,269.9920000); //object(elecfence_bar)(29)
		CreateDynamicObject(987,97.0000000,1917.9000000,17.1000000,0.0000000,0.0000000,269.9920000); //object(elecfence_bar)(30)
		CreateDynamicObject(987,96.9000000,1929.9000000,17.1000000,0.0000000,0.0000000,270.4920000); //object(elecfence_bar)(31)
		CreateDynamicObject(987,96.8000000,1941.9000000,17.2000000,0.0000000,0.0000000,270.4920000); //object(elecfence_bar)(32)
		CreateDynamicObject(987,187.8000000,1941.3000000,16.8000000,0.0000000,358.0000000,179.2500000); //object(elecfence_bar)(34)
		CreateDynamicObject(987,175.8999900,1941.5000000,17.3000000,0.0000000,359.0000000,179.7470000); //object(elecfence_bar)(35)
		CreateDynamicObject(987,163.8999900,1941.6000000,17.6000000,0.0000000,358.2500000,179.4970000); //object(elecfence_bar)(36)
		CreateDynamicObject(987,154.8999900,1941.8000000,18.0000000,0.0000000,0.0000000,179.7470000); //object(elecfence_bar)(37)
		CreateDynamicObject(987,108.7000000,1941.8000000,17.7000000,0.2500000,2.5000000,179.7360000); //object(elecfence_bar)(38)
		CreateDynamicObject(987,127.0000000,1942.0000000,18.3000000,0.0000000,1.5000000,179.9970000); //object(elecfence_bar)(39)
		CreateDynamicObject(987,118.0000000,1942.0000000,17.9000000,0.0000000,1.2500000,180.7470000); //object(elecfence_bar)(40)
		CreateDynamicObject(987,199.7000000,1941.0000000,16.5000000,0.0000000,359.2450000,179.2470000); //object(elecfence_bar)(41)
		CreateDynamicObject(987,211.7000000,1940.9000000,16.6000000,0.0000000,359.9920000,179.4970000); //object(elecfence_bar)(44)
		CreateDynamicObject(987,223.6000100,1941.0000000,16.6000000,0.0000000,359.7420000,180.4970000); //object(elecfence_bar)(45)
		CreateDynamicObject(987,273.1000100,1799.0000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(elecfence_bar)(46)
		CreateDynamicObject(987,285.0000000,1799.0000000,16.6000000,0.0000000,0.0000000,89.2470000); //object(elecfence_bar)(48)
		CreateDynamicObject(987,285.1000100,1805.0000000,16.7000000,0.0000000,0.0000000,89.2420000); //object(elecfence_bar)(49)
		CreateDynamicObject(987,285.2999900,1824.8000000,16.6000000,0.0000000,0.0000000,89.2420000); //object(elecfence_bar)(50)
		CreateDynamicObject(987,285.3999900,1836.8000000,16.6000000,0.0000000,0.0000000,89.2420000); //object(elecfence_bar)(51)
		CreateDynamicObject(987,285.5000000,1848.7000000,16.6000000,0.0000000,0.0000000,89.2420000); //object(elecfence_bar)(52)
		CreateDynamicObject(987,285.6000100,1860.6000000,16.6000000,0.0000000,0.0000000,89.2420000); //object(elecfence_bar)(53)
		CreateDynamicObject(987,285.7000100,1872.5000000,16.6000000,0.0000000,0.0000000,89.2420000); //object(elecfence_bar)(54)
		CreateDynamicObject(987,285.7999900,1884.4000000,16.6000000,0.0000000,0.0000000,89.2420000); //object(elecfence_bar)(55)
		CreateDynamicObject(987,285.8999900,1896.3000000,16.6000000,0.0000000,0.0000000,89.2420000); //object(elecfence_bar)(56)
		CreateDynamicObject(987,286.0000000,1908.0000000,16.6000000,0.0000000,0.0000000,145.4920000); //object(elecfence_bar)(57)
		CreateDynamicObject(987,276.1000100,1914.8000000,16.6000000,0.0000000,0.0000000,145.4920000); //object(elecfence_bar)(59)
		CreateDynamicObject(987,266.2000100,1921.6000000,16.6000000,0.0000000,0.0000000,145.4920000); //object(elecfence_bar)(60)
		CreateDynamicObject(987,256.2999900,1928.3000000,16.6000000,0.0000000,0.0000000,146.7420000); //object(elecfence_bar)(61)
		CreateDynamicObject(987,246.3000000,1934.8000000,16.6000000,0.0000000,0.0000000,153.7420000); //object(elecfence_bar)(62)
		CreateDynamicObject(987,235.6000100,1940.1000000,16.6000000,0.0000000,359.7420000,175.7440000); //object(elecfence_bar)(63)
		CreateDynamicObject(3280,299.3999900,1818.6000000,3.7000000,0.0000000,0.0000000,0.0000000); //object(a51_panel)(1)
		CreateDynamicObject(3280,263.7000100,1824.2000000,3.7000000,0.0000000,0.0000000,0.0000000); //object(a51_panel)(2)
		CreateDynamicObject(3280,263.7000100,1822.6000000,3.7000000,0.0000000,0.0000000,0.0000000); //object(a51_panel)(3)
		CreateDynamicObject(3280,263.7000100,1821.0000000,3.7000000,0.0000000,0.0000000,0.0000000); //object(a51_panel)(4)
		CreateDynamicObject(4874,341.3999900,1958.7000000,20.4000000,0.0000000,0.0000000,270.0000000); //object(helipad1_las)(1)
		CreateDynamicObject(8572,320.3999900,1989.8000000,18.6000000,0.0000000,0.0000000,270.0000000); //object(vgssstairs02_lvs)(1)
		CreateDynamicObject(3095,325.7999900,1924.3000000,16.1000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor)(1)
		CreateDynamicObject(3095,334.7999900,1924.3000000,16.1000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor)(2)
		CreateDynamicObject(3095,343.7999900,1924.3000000,16.1000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor)(3)
		CreateDynamicObject(3095,350.1000100,1924.3000000,16.1000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor)(4)
		CreateDynamicObject(2068,248.3999900,1870.9000000,14.3000000,0.0000000,0.0000000,269.5000000); //object(cj_cammo_net)(2)
		CreateDynamicObject(2064,260.7999900,1870.4000000,8.4000000,0.0000000,0.0000000,316.0000000); //object(cj_feildgun)(1)
		CreateDynamicObject(2060,259.6000100,1871.5000000,7.8000000,0.0000000,0.0000000,318.0000000); //object(cj_sandbag)(2)
		CreateDynamicObject(2060,262.1000100,1869.3000000,7.9000000,0.0000000,0.0000000,322.0000000); //object(cj_sandbag)(3)
		CreateDynamicObject(2060,262.1000100,1869.3000000,8.1000000,0.0000000,0.0000000,321.9980000); //object(cj_sandbag)(4)
		CreateDynamicObject(2060,262.1000100,1869.3000000,8.4000000,0.0000000,0.0000000,321.9980000); //object(cj_sandbag)(5)
		CreateDynamicObject(2060,259.6000100,1871.5000000,8.1000000,0.0000000,0.0000000,317.9990000); //object(cj_sandbag)(6)
		CreateDynamicObject(2061,260.2999900,1872.5000000,8.0000000,0.0000000,0.0000000,0.0000000); //object(cj_shells1)(1)
		CreateDynamicObject(2061,260.6000100,1872.6000000,8.0000000,0.0000000,0.0000000,0.0000000); //object(cj_shells1)(2)
		CreateDynamicObject(2061,260.5000000,1872.4000000,8.0000000,0.0000000,0.0000000,0.0000000); //object(cj_shells1)(3)
		CreateDynamicObject(2063,244.3000000,1874.7000000,8.7000000,0.0000000,0.0000000,90.2500000); //object(cj_greenshelves)(2)
		CreateDynamicObject(1431,244.2000000,1877.2000000,8.3000000,0.0000000,0.0000000,270.0000000); //object(dyn_box_playerinfole)(1)
		CreateDynamicObject(3066,261.8999900,1855.0000000,8.8000000,0.0000000,0.0000000,0.0000000); //object(ammotrn_obj)(1)
		CreateDynamicObject(3015,244.8999900,1878.2000000,7.8000000,0.0000000,0.0000000,3.7500000); //object(cr_cratestack)(1)
		CreateDynamicObject(3015,245.3999900,1878.2000000,7.8000000,0.0000000,0.0000000,353.2500000); //object(cr_cratestack)(2)
		CreateDynamicObject(3015,245.8999900,1878.2000000,7.8000000,0.0000000,0.0000000,2.5000000); //object(cr_cratestack)(3)
		CreateDynamicObject(3015,244.8000000,1877.8000000,7.8000000,0.0000000,0.0000000,357.5000000); //object(cr_cratestack)(4)
		CreateDynamicObject(3015,245.3000000,1877.8000000,7.8000000,0.0000000,0.0000000,1.0000000); //object(cr_cratestack)(5)
		CreateDynamicObject(1271,246.6000100,1878.0000000,8.1000000,0.0000000,0.0000000,349.2500000); //object(gunbox)(1)
		CreateDynamicObject(1271,247.3999900,1878.0000000,8.1000000,0.0000000,0.0000000,354.2500000); //object(gunbox)(2)
		CreateDynamicObject(1271,248.2000000,1878.0000000,8.1000000,0.0000000,0.0000000,3.7500000); //object(gunbox)(3)
		CreateDynamicObject(1271,246.6000100,1878.0000000,8.8000000,0.0000000,0.0000000,357.2500000); //object(gunbox)(4)
		CreateDynamicObject(1271,247.3999900,1878.0000000,8.8000000,0.0000000,0.0000000,9.5000000); //object(gunbox)(5)
		CreateDynamicObject(2063,244.3000000,1872.0000000,8.6000000,356.2560000,356.7430000,89.5340000); //object(cj_greenshelves)(3)
		CreateDynamicObject(2063,244.2000000,1869.3000000,8.5000000,0.0000000,0.0000000,90.2470000); //object(cj_greenshelves)(4)
		CreateDynamicObject(2063,246.8000000,1875.6000000,8.7000000,0.0000000,0.0000000,268.9970000); //object(cj_greenshelves)(5)
		CreateDynamicObject(2063,246.8000000,1872.9000000,8.6000000,2.2460000,3.5030000,270.6100000); //object(cj_greenshelves)(6)
		CreateDynamicObject(2063,247.0000000,1870.2002000,8.5000000,0.0000000,0.0000000,282.9970000); //object(cj_greenshelves)(7)
		CreateDynamicObject(944,250.1000100,1877.6000000,8.6000000,0.0000000,0.0000000,0.0000000); //object(packing_carates04)(1)
		CreateDynamicObject(944,253.1000100,1877.6000000,8.6000000,0.0000000,0.0000000,0.0000000); //object(packing_carates04)(2)
		CreateDynamicObject(3633,254.5000000,1876.2000000,8.2000000,0.0000000,0.0000000,0.0000000); //object(imoildrum4_las)(1)
		CreateDynamicObject(3791,261.6000100,1861.8000000,8.2000000,0.0000000,0.0000000,21.7500000); //object(missile_10_sfxr)(1)
		CreateDynamicObject(3793,262.8999900,1865.0000000,8.4000000,0.0000000,0.0000000,90.0000000); //object(missile_06_sfxr)(1)
		CreateDynamicObject(3788,261.0000000,1864.7000000,8.3000000,0.0000000,0.0000000,104.0000000); //object(missile_03_sfxr)(1)
		CreateDynamicObject(2358,249.2000000,1877.3000000,9.3000000,0.0000000,0.0000000,28.0000000); //object(ammo_box_c2)(1)
		CreateDynamicObject(2358,249.2000000,1877.3000000,9.5000000,0.0000000,0.0000000,15.9990000); //object(ammo_box_c2)(2)
		CreateDynamicObject(2358,250.1000100,1877.4000000,9.3000000,0.0000000,0.0000000,353.9960000); //object(ammo_box_c2)(3)
		CreateDynamicObject(2358,250.1000100,1877.4000000,9.5000000,0.0000000,0.0000000,339.9960000); //object(ammo_box_c2)(4)
		CreateDynamicObject(2358,251.0000000,1877.7000000,9.3000000,0.0000000,0.0000000,335.9940000); //object(ammo_box_c2)(5)
		CreateDynamicObject(2358,251.0000000,1877.7000000,9.5000000,0.0000000,0.0000000,359.9890000); //object(ammo_box_c2)(6)
		CreateDynamicObject(2358,248.8000000,1876.5000000,7.9000000,0.0000000,0.0000000,17.9890000); //object(ammo_box_c2)(7)
		CreateDynamicObject(2358,251.1000100,1876.5000000,7.9000000,0.0000000,0.0000000,333.9850000); //object(ammo_box_c2)(8)
		CreateDynamicObject(2358,248.8000000,1876.5000000,8.1000000,0.0000000,0.0000000,333.9840000); //object(ammo_box_c2)(9)
		CreateDynamicObject(2358,251.1000100,1876.5000000,8.1000000,0.0000000,0.0000000,357.9840000); //object(ammo_box_c2)(10)
		CreateDynamicObject(2359,247.8999900,1877.2000000,8.0000000,0.0000000,0.0000000,18.0000000); //object(ammo_box_c5)(1)
		CreateDynamicObject(2359,252.0000000,1876.5000000,8.0000000,0.0000000,0.0000000,11.9960000); //object(ammo_box_c5)(2)
		CreateDynamicObject(2042,252.7000000,1876.3000000,7.9000000,0.0000000,0.0000000,242.0000000); //object(ammo_box_m3)(1)
		CreateDynamicObject(2040,252.2000000,1877.0000000,9.3000000,0.0000000,0.0000000,78.0000000); //object(ammo_box_m1)(1)
		CreateDynamicObject(2040,252.5000000,1877.3000000,9.3000000,0.0000000,0.0000000,77.9970000); //object(ammo_box_m1)(2)
		CreateDynamicObject(2040,252.8000000,1877.0000000,9.3000000,0.0000000,0.0000000,97.9970000); //object(ammo_box_m1)(3)
		CreateDynamicObject(1271,244.3999900,1865.6000000,7.9000000,0.0000000,0.0000000,9.4980000); //object(gunbox)(6)
		CreateDynamicObject(1271,244.3999900,1866.5000000,7.9000000,0.0000000,0.0000000,352.2480000); //object(gunbox)(7)
		CreateDynamicObject(1271,244.3999900,1867.4000000,7.9000000,0.0000000,0.0000000,358.2440000); //object(gunbox)(8)
		CreateDynamicObject(1242,244.6000100,1866.4000000,8.4000000,47.9130000,184.4780000,168.1740000); //object(bodyarmour)(1)
		CreateDynamicObject(1242,244.6000100,1866.7000000,8.4000000,0.0000000,0.0000000,265.9950000); //object(bodyarmour)(2)
		CreateDynamicObject(1242,244.6000100,1867.2000000,8.4000000,0.0000000,0.0000000,277.9900000); //object(bodyarmour)(3)
		CreateDynamicObject(1242,244.6000100,1867.4000000,8.4000000,10.0000000,0.0000000,352.2370000); //object(bodyarmour)(4)
		CreateDynamicObject(1242,244.8999900,1866.2000000,7.7000000,56.0000000,0.0000000,239.9850000); //object(bodyarmour)(8)
		CreateDynamicObject(1242,244.6000100,1865.5000000,8.4000000,0.0000000,347.0000000,311.9950000); //object(bodyarmour)(13)
		CreateDynamicObject(1242,244.3000000,1865.6000000,8.4000000,342.0000000,0.0000000,311.9950000); //object(bodyarmour)(14)
		CreateDynamicObject(1242,244.6000100,1865.8000000,8.4000000,16.0000000,0.0000000,295.9950000); //object(bodyarmour)(15)
		CreateDynamicObject(356,244.3000000,1875.2000000,9.1000000,278.1330000,42.6510000,128.3620000); //object(4)
		CreateDynamicObject(356,244.3000000,1874.0000000,9.1000000,278.1300000,42.6490000,136.3590000); //object(5)
		CreateDynamicObject(356,244.3000000,1874.0000000,8.7000000,282.3390000,158.4700000,246.9190000); //object(6)
		CreateDynamicObject(356,244.3000000,1875.2000000,8.7000000,282.3380000,158.4670000,238.9180000); //object(7)
		CreateDynamicObject(356,244.3000000,1875.2000000,8.2000000,282.3320000,158.4670000,238.9140000); //object(8)
		CreateDynamicObject(356,244.3000000,1874.1000000,8.2000000,282.3320000,158.4670000,238.9140000); //object(9)
		CreateDynamicObject(356,244.3999900,1875.5000000,9.5000000,81.0620000,333.3230000,300.3970000); //object(11)
		CreateDynamicObject(346,246.7000000,1876.5000000,8.2000000,270.7070000,134.9990000,66.0010000); //object(13)
		CreateDynamicObject(346,246.7000000,1875.9000000,8.2000000,270.7030000,134.9950000,66.0000000); //object(14)
		CreateDynamicObject(346,246.7000000,1875.3000000,8.2000000,270.7030000,134.9950000,66.0000000); //object(15)
		CreateDynamicObject(346,246.7000000,1874.7000000,8.2000000,270.7030000,134.9950000,66.0000000); //object(16)
		CreateDynamicObject(346,246.8000000,1876.6000000,8.7000000,271.2500000,126.8660000,34.8730000); //object(18)
		CreateDynamicObject(346,246.8000000,1876.0000000,8.7000000,271.2470000,126.8650000,34.8710000); //object(19)
		CreateDynamicObject(346,246.8000000,1875.3000000,8.7000000,271.2470000,126.8650000,34.8710000); //object(20)
		CreateDynamicObject(346,246.8000000,1874.7000000,8.7000000,271.2470000,126.8650000,34.8710000); //object(21)
		CreateDynamicObject(346,246.8000000,1874.7000000,9.1000000,272.6120000,253.3650000,161.3480000); //object(22)
		CreateDynamicObject(346,246.8000000,1875.3000000,9.1000000,271.6780000,243.5340000,151.5240000); //object(23)
		CreateDynamicObject(346,246.8000000,1875.9000000,9.1000000,277.3200000,7.8540000,275.7900000); //object(24)
		CreateDynamicObject(346,246.8000000,1876.6000000,9.1000000,277.3170000,7.8500000,275.7900000); //object(25)
		CreateDynamicObject(346,246.8000000,1876.6000000,9.5000000,279.3380000,344.3840000,252.5840000); //object(26)
		CreateDynamicObject(346,246.8000000,1875.9000000,9.5000000,279.2180000,347.3950000,255.5550000); //object(27)
		CreateDynamicObject(346,246.8000000,1875.3000000,9.5000000,276.4010000,321.2300000,225.4080000); //object(28)
		CreateDynamicObject(346,246.8000000,1874.8000000,9.5000000,279.7970000,340.4990000,242.7630000); //object(29)
		CreateDynamicObject(358,244.3999900,1872.4000000,9.5000000,273.8160000,121.5750000,205.1320000); //object(30)
		CreateDynamicObject(358,244.3999900,1871.2000000,9.4000000,274.7740000,42.8890000,126.2890000); //object(31)
		CreateDynamicObject(358,244.3999900,1871.2000000,9.0000000,274.7740000,42.8850000,126.2880000); //object(32)
		CreateDynamicObject(358,244.3999900,1871.2000000,8.6000000,281.7020000,163.7860000,247.6080000); //object(33)
		CreateDynamicObject(358,244.3999900,1871.2000000,8.1000000,281.7000000,163.7840000,247.6040000); //object(34)
		CreateDynamicObject(358,244.3999900,1872.4000000,9.1000000,273.8120000,121.5750000,205.1310000); //object(35)
		CreateDynamicObject(358,244.3999900,1872.4000000,8.6000000,273.8120000,121.5750000,205.1310000); //object(36)
		CreateDynamicObject(358,244.3999900,1872.4000000,8.1000000,273.9520000,34.6760000,122.1120000); //object(37)
		CreateDynamicObject(351,246.6000100,1873.9000000,9.5000000,280.5370000,143.4640000,59.4290000); //object(38)
		CreateDynamicObject(351,246.7000000,1873.9000000,9.1000000,278.3170000,131.1840000,46.9860000); //object(39)
		CreateDynamicObject(351,246.7000000,1873.9000000,8.7000000,283.8690000,127.2460000,43.5660000); //object(40)
		CreateDynamicObject(351,246.7000000,1873.9000000,8.2000000,281.1540000,139.2780000,45.3180000); //object(41)
		CreateDynamicObject(351,246.7000000,1872.6000000,9.4000000,278.0740000,111.6710000,27.1180000); //object(42)
		CreateDynamicObject(351,246.7000000,1872.6000000,9.0000000,278.0690000,111.6710000,27.1140000); //object(43)
		CreateDynamicObject(351,246.7000000,1872.6000000,8.6000000,278.0690000,111.6710000,27.1140000); //object(44)
		CreateDynamicObject(351,246.7000000,1872.6000000,8.1000000,278.0690000,111.6710000,27.1140000); //object(45)
		CreateDynamicObject(944,245.8000000,1864.3000000,8.4000000,0.0000000,0.0000000,0.0000000); //object(packing_carates04)(3)
		CreateDynamicObject(353,244.3000000,1868.6000000,9.3000000,83.6270000,281.2650000,356.6660000); //object(1)
		CreateDynamicObject(353,244.3000000,1869.4000000,9.3000000,83.6220000,281.2610000,356.6660000); //object(2)
		CreateDynamicObject(353,244.3000000,1870.2000000,9.3000000,83.6220000,281.2610000,356.6660000); //object(3)
		CreateDynamicObject(353,244.3000000,1870.2000000,8.9000000,83.6220000,281.2610000,356.6660000); //object(10)
		CreateDynamicObject(353,244.3000000,1869.4000000,8.9000000,83.6220000,281.2610000,356.6660000); //object(12)
		CreateDynamicObject(353,244.3000000,1868.6000000,8.9000000,83.6220000,281.2610000,356.6660000); //object(17)
		CreateDynamicObject(353,244.3000000,1868.6000000,8.4000000,81.5960000,292.6060000,345.9180000); //object(46)
		CreateDynamicObject(353,244.3000000,1869.4000000,8.4000000,81.5950000,292.6040000,345.9160000); //object(47)
		CreateDynamicObject(353,244.3000000,1870.3000000,8.4000000,81.5950000,292.6040000,345.9160000); //object(48)
		CreateDynamicObject(353,244.3000000,1870.3000000,8.0000000,69.5330000,202.6990000,77.3410000); //object(49)
		CreateDynamicObject(353,244.3000000,1869.5000000,8.0000000,69.5320000,202.6980000,77.3380000); //object(50)
		CreateDynamicObject(353,244.3000000,1868.6000000,8.0000000,69.5320000,202.6980000,77.3380000); //object(51)
		CreateDynamicObject(1672,246.7000000,1871.1000000,9.3000000,88.0000000,180.0000000,180.0000000); //object(gasgrenade)(1)
		CreateDynamicObject(1672,246.8000000,1870.9000000,9.4000000,0.0000000,0.0000000,0.0000000); //object(gasgrenade)(2)
		CreateDynamicObject(1672,246.7000000,1870.6000000,9.3000000,0.0000000,271.5000000,12.5000000); //object(gasgrenade)(3)
		CreateDynamicObject(1672,246.8999900,1870.4000000,9.4000000,352.2500000,0.0000000,260.0000000); //object(gasgrenade)(4)
		CreateDynamicObject(1672,246.8999900,1870.0000000,9.3000000,0.0000000,83.7500000,101.7500000); //object(gasgrenade)(5)
		CreateDynamicObject(1672,246.8999900,1869.7000000,9.4000000,0.0000000,0.0000000,0.0000000); //object(gasgrenade)(6)
		CreateDynamicObject(1672,247.2000000,1869.2000000,9.3000000,84.5000000,0.0000000,0.0000000); //object(gasgrenade)(7)
		CreateDynamicObject(1672,246.6000100,1871.1000000,8.9000000,273.7500000,180.0000000,180.0000000); //object(gasgrenade)(8)
		CreateDynamicObject(1672,246.8000000,1870.8000000,8.9000000,88.0000000,0.0000000,0.0000000); //object(gasgrenade)(9)
		CreateDynamicObject(1672,246.8999900,1870.7000000,8.9000000,0.0000000,0.0000000,0.0000000); //object(gasgrenade)(10)
		CreateDynamicObject(1672,246.8000000,1870.1000000,8.9000000,0.0000000,254.0000000,8.0000000); //object(gasgrenade)(11)
		CreateDynamicObject(1672,246.8999900,1869.8000000,8.9000000,0.0000000,84.0000000,327.0000000); //object(gasgrenade)(12)
		CreateDynamicObject(1672,247.1000100,1869.3000000,8.9000000,78.9300000,353.4760000,335.4030000); //object(gasgrenade)(13)
		CreateDynamicObject(1672,247.0000000,1870.4000000,8.9000000,0.0000000,264.5000000,0.0000000); //object(gasgrenade)(14)
		CreateDynamicObject(369,246.6000100,1871.0000000,8.4000000,0.1130000,273.2480000,1.9970000); //object(53)
		CreateDynamicObject(369,246.7000000,1871.1000000,8.1000000,354.3600000,99.7500000,328.2310000); //object(54)
		CreateDynamicObject(369,246.8999900,1870.8000000,8.1000000,354.3590000,99.7450000,328.2280000); //object(55)
		CreateDynamicObject(369,246.8000000,1870.5000000,8.1000000,354.3590000,99.7450000,328.2280000); //object(56)
		CreateDynamicObject(369,246.8999900,1870.2000000,8.1000000,349.9280000,84.9710000,241.3030000); //object(57)
		CreateDynamicObject(369,247.0000000,1869.9000000,8.1000000,349.9260000,84.9680000,10.7980000); //object(58)
		CreateDynamicObject(369,247.1000100,1869.4000000,8.1000000,350.9460000,83.2870000,100.7060000); //object(59)
		CreateDynamicObject(369,246.8999900,1870.7000000,8.4000000,0.1100000,273.2460000,1.9940000); //object(60)
		CreateDynamicObject(369,246.8999900,1870.4000000,8.4000000,0.1100000,273.2460000,1.9940000); //object(61)
		CreateDynamicObject(369,246.8999900,1870.1000000,8.4000000,3.1210000,270.9000000,73.9730000); //object(62)
		CreateDynamicObject(369,247.1000100,1869.8000000,8.4000000,357.3750000,271.9090000,306.0390000); //object(63)
		CreateDynamicObject(369,247.1000100,1869.5000000,8.4000000,357.3740000,271.9060000,306.0350000); //object(64)
		CreateDynamicObject(369,247.1000100,1869.1000000,8.4000000,358.1490000,272.6650000,325.2850000); //object(65)
		CreateDynamicObject(3095,268.7000100,1883.9000000,16.0000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor)(1)

		//---------------------BROD-HANGAR----------------------

		CreateDynamicObject(2669,2844.4004000,-2516.8994000,12.3000000,0.0000000,0.0000000,179.4950000); //object(cj_chris_crate)(1)
		CreateDynamicObject(1378,2800.8999000,-2436.8999000,37.0000000,0.0000000,0.0000000,270.0000000); //object(containercrane_04)(1)
		CreateDynamicObject(1376,2809.7000000,-2436.8999000,32.5000000,0.0000000,0.0000000,270.0000000); //object(containercrane_03)(1)
		CreateDynamicObject(16367,2827.3999000,-2502.8999000,12.6000000,0.0000000,0.0000000,0.0000000); //object(des_quayramp)(2)
		CreateDynamicObject(3565,2838.8000000,-2471.2000000,12.5000000,0.0000000,0.0000000,181.0000000); //object(lasdkrt1_la01)(8)
		CreateDynamicObject(3575,2842.7000000,-2464.8000000,13.8000000,0.0000000,0.0000000,91.2500000); //object(lasdkrt05)(1)
		CreateDynamicObject(3573,2838.0000000,-2496.3994000,13.7000000,0.0000000,0.0000000,0.0000000); //object(lasdkrtgrp1)(1)
		CreateDynamicObject(3574,2831.2000000,-2479.3000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(lasdkrtgrp2)(1)
		CreateDynamicObject(3575,2847.8000000,-2482.1001000,13.6000000,0.0000000,0.0000000,359.2470000); //object(lasdkrt05)(2)
		CreateDynamicObject(2669,2849.5000000,-2464.7002000,12.4000000,0.0000000,0.0000000,0.9940000); //object(cj_chris_crate)(4)
		CreateDynamicObject(3570,2833.3000000,-2468.8999000,12.5000000,0.0000000,0.0000000,91.2500000); //object(lasdkrt2)(2)
		CreateDynamicObject(3570,2833.2002000,-2458.2002000,12.5000000,0.0000000,0.0000000,91.2470000); //object(lasdkrt2)(3)
		CreateDynamicObject(3571,2830.6001000,-2468.8000000,12.5000000,0.0000000,0.0000000,91.2500000); //object(lasdkrt3)(1)
		CreateDynamicObject(3571,2828.0000000,-2468.8999000,12.5000000,0.0000000,0.0000000,91.2470000); //object(lasdkrt3)(2)
		CreateDynamicObject(3571,2831.8000000,-2469.1001000,15.2000000,0.0000000,0.0000000,119.2470000); //object(lasdkrt3)(3)
		CreateDynamicObject(2669,2837.2000000,-2458.0000000,12.4000000,0.0000000,0.0000000,90.9940000); //object(cj_chris_crate)(5)
		CreateDynamicObject(3572,2825.6006000,-2488.2002000,12.4000000,0.0000000,0.0000000,117.9990000); //object(lasdkrt4)(1)
		CreateDynamicObject(3572,2825.5000000,-2496.8999000,12.4000000,0.0000000,0.0000000,133.9950000); //object(lasdkrt4)(2)
		CreateDynamicObject(3571,2848.1001000,-2513.1001000,12.4000000,0.0000000,0.0000000,99.2460000); //object(lasdkrt3)(4)
		CreateDynamicObject(1998,2798.3000000,-2392.8000000,13.0000000,0.0000000,0.0000000,268.0000000); //object(officedesk1l)(1)
		CreateDynamicObject(3386,2799.2000000,-2395.1001000,12.4000000,0.0000000,0.0000000,0.0000000); //object(a51_srack2_)(1)
		CreateDynamicObject(1998,2743.8999000,-2455.0000000,12.9000000,0.0000000,0.0000000,89.7450000); //object(officedesk1l)(2)
		CreateDynamicObject(3386,2742.8000000,-2452.6001000,12.3000000,0.0000000,0.0000000,179.0000000); //object(a51_srack2_)(2)
		CreateDynamicObject(3571,2822.4004000,-2383.2998000,12.4000000,0.0000000,0.0000000,84.9900000); //object(lasdkrt3)(5)
		CreateDynamicObject(3571,2822.2998000,-2391.5996000,12.4000000,0.0000000,0.0000000,93.2410000); //object(lasdkrt3)(6)
		CreateDynamicObject(3574,2793.5000000,-2437.8000000,15.3000000,0.0000000,0.0000000,90.4950000); //object(lasdkrtgrp2)(2)
		CreateDynamicObject(3574,2792.5000000,-2461.6001000,15.3000000,0.0000000,0.0000000,270.0000000); //object(lasdkrtgrp2)(3)
		CreateDynamicObject(3574,2793.6001000,-2412.6001000,15.3000000,0.0000000,0.0000000,269.9950000); //object(lasdkrtgrp2)(4)
		CreateDynamicObject(3573,2834.5000000,-2515.7000000,13.7000000,0.0000000,0.0000000,180.0000000); //object(lasdkrtgrp1)(2)
		CreateDynamicObject(2973,2835.8999000,-2458.0000000,11.1000000,0.0000000,0.0000000,1.2500000); //object(k_cargo2)(1)
		CreateDynamicObject(944,2845.0000000,-2518.0000000,12.0000000,0.0000000,0.0000000,268.0000000); //object(packing_carates04)(1)
		CreateDynamicObject(3016,2844.6001000,-2516.8999000,12.7000000,0.0000000,0.0000000,22.0000000); //object(cr_ammobox_nonbrk)(1)
		CreateDynamicObject(3016,2845.0000000,-2516.8000000,12.7000000,0.0000000,0.0000000,359.9950000); //object(cr_ammobox_nonbrk)(2)
		CreateDynamicObject(3016,2845.5000000,-2516.8000000,12.7000000,0.0000000,0.0000000,359.9950000); //object(cr_ammobox_nonbrk)(3)
		CreateDynamicObject(3016,2845.3000000,-2517.3000000,12.7000000,0.0000000,0.0000000,359.9950000); //object(cr_ammobox_nonbrk)(4)
		CreateDynamicObject(3015,2843.2000000,-2519.0000000,11.1000000,0.0000000,0.0000000,344.0000000); //object(cr_cratestack)(1)
		CreateDynamicObject(3015,2843.2000000,-2519.0000000,11.8000000,0.0000000,0.0000000,11.9980000); //object(cr_cratestack)(2)
		CreateDynamicObject(3014,2843.8000000,-2519.1001000,11.3000000,0.0000000,0.0000000,8.0000000); //object(cr_guncrate)(1)
		CreateDynamicObject(2358,2843.8999000,-2519.1001000,11.7000000,0.0000000,0.0000000,178.0000000); //object(ammo_box_c2)(1)
		CreateDynamicObject(2358,2843.8999000,-2519.1001000,11.9000000,0.0000000,0.0000000,189.9950000); //object(ammo_box_c2)(2)
		CreateDynamicObject(2359,2844.7000000,-2518.3999000,12.7300000,0.0000000,0.0000000,258.0000000); //object(ammo_box_c5)(1)
		CreateDynamicObject(1685,2849.0000000,-2463.0000000,11.9000000,0.0000000,0.0000000,0.0000000); //object(blockpallet)(1)
		CreateDynamicObject(2975,2850.1001000,-2464.7000000,11.2000000,0.0000000,0.0000000,0.0000000); //object(k_cargo3)(1)
		CreateDynamicObject(2969,2848.5000000,-2464.3000000,11.3000000,0.0000000,0.0000000,20.0000000); //object(level_ammobox)(1)
		CreateDynamicObject(2969,2848.5000000,-2464.3000000,11.5000000,0.0000000,0.0000000,7.9950000); //object(level_ammobox)(2)
		CreateDynamicObject(2969,2848.5000000,-2464.3000000,11.7000000,0.0000000,0.0000000,27.9930000); //object(level_ammobox)(3)
		CreateDynamicObject(1575,2849.1001000,-2464.3000000,11.2000000,0.0000000,0.0000000,320.0000000); //object(drug_white)(1)
		CreateDynamicObject(1575,2848.6001000,-2464.3999000,11.8000000,0.0000000,0.0000000,331.9990000); //object(drug_white)(2)
		CreateDynamicObject(1575,2848.7000000,-2464.3999000,11.9000000,0.0000000,0.0000000,283.9960000); //object(drug_white)(3)
		CreateDynamicObject(1575,2848.6001000,-2464.7000000,11.3000000,0.0000000,322.0000000,109.9990000); //object(drug_white)(4)
		CreateDynamicObject(3572,2841.6001000,-2497.1001000,17.7000000,0.0000000,0.0000000,181.9990000); //object(lasdkrt4)(3)
		CreateDynamicObject(3571,2822.2998000,-2442.0000000,12.4000000,0.0000000,0.0000000,95.2400000); //object(lasdkrt3)(7)
		CreateDynamicObject(3571,2822.2998000,-2433.7002000,12.4000000,0.0000000,0.0000000,83.9900000); //object(lasdkrt3)(8)
		CreateDynamicObject(4100,2820.8000000,-2451.3999000,14.2000000,0.0000000,0.0000000,50.0000000); //object(meshfence1_lan)(1)
		CreateDynamicObject(4100,2820.8000000,-2465.2000000,14.2000000,0.0000000,0.0000000,49.9990000); //object(meshfence1_lan)(2)
		CreateDynamicObject(4100,2821.0000000,-2479.1001000,14.2000000,0.0000000,0.0000000,51.2490000); //object(meshfence1_lan)(3)
		CreateDynamicObject(4100,2821.3999000,-2493.0000000,14.3000000,0.0000000,0.0000000,53.2460000); //object(meshfence1_lan)(4)
		CreateDynamicObject(4100,2822.8000000,-2506.8000000,14.3000000,0.0000000,0.0000000,59.2450000); //object(meshfence1_lan)(5)
		CreateDynamicObject(3571,2822.3000000,-2442.0000000,15.1000000,0.0000000,0.0000000,95.2400000); //object(lasdkrt3)(9)
		CreateDynamicObject(3571,2822.3000000,-2433.7000000,15.1000000,0.0000000,0.0000000,83.9900000); //object(lasdkrt3)(10)
		CreateDynamicObject(4100,2820.8999000,-2423.8999000,14.2000000,0.0000000,0.0000000,50.4990000); //object(meshfence1_lan)(6)
		CreateDynamicObject(4100,2820.8999000,-2410.1001000,14.2000000,0.0000000,0.0000000,49.9990000); //object(meshfence1_lan)(7)
		CreateDynamicObject(4100,2820.8000000,-2401.7000000,14.2000000,0.0000000,0.0000000,49.9930000); //object(meshfence1_lan)(8)
		CreateDynamicObject(4100,2820.7000000,-2374.3000000,14.3000000,0.0000000,0.0000000,49.9930000); //object(meshfence1_lan)(9)
		CreateDynamicObject(4100,2821.0000000,-2360.6001000,14.3000000,0.0000000,0.0000000,47.9930000); //object(meshfence1_lan)(10)
		CreateDynamicObject(4100,2822.2000000,-2346.8999000,14.3000000,0.0000000,0.0000000,43.2380000); //object(meshfence1_lan)(11)
		CreateDynamicObject(3571,2822.3999000,-2383.3000000,15.1000000,0.0000000,0.0000000,84.9900000); //object(lasdkrt3)(11)
		CreateDynamicObject(3571,2822.3000000,-2391.6001000,15.1000000,0.0000000,0.0000000,93.2410000); //object(lasdkrt3)(12)
		CreateDynamicObject(3570,2825.2000000,-2441.8000000,12.4000000,0.0000000,0.0000000,91.2470000); //object(lasdkrt2)(1)
		CreateDynamicObject(3570,2822.7000000,-2399.8000000,12.4000000,0.0000000,0.0000000,91.2470000); //object(lasdkrt2)(4)

		CreateDynamicObject(8650,2616.7000000,-2345.3999000,13.7000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall06_lvs) (1)
		CreateDynamicObject(992,2707.3999000,-2512.2000000,14.2000000,0.0000000,0.0000000,270.5000000); //object(bar_barrier10b) (1)
		CreateDynamicObject(992,2709.3999000,-2510.3000000,14.2000000,0.0000000,0.0000000,180.2460000); //object(bar_barrier10b) (2)
		CreateDynamicObject(8650,2711.6001000,-2565.5000000,13.8000000,0.0000000,0.0000000,270.0000000); //object(shbbyhswall06_lvs) (2)
		CreateDynamicObject(8650,2681.1001000,-2565.5000000,13.8000000,0.0000000,0.0000000,270.0000000); //object(shbbyhswall06_lvs) (3)
		CreateDynamicObject(2922,2720.0000000,-2509.2000000,14.2000000,0.0000000,0.0000000,90.5000000); //object(kmb_keypad) (1)
		CreateDynamicObject(2922,2720.0000000,-2410.8000000,14.1000000,0.0000000,0.0000000,90.0000000); //object(kmb_keypad) (2)
	
		crveniKontenjer = CreateObject(2934,2811.7002000,-2436.8994000,38.4000000,0.0000000,0.0000000,89.7500000); //object(kmb_container_red) (4)

		katanac1 = CreateObject(2680,2844.4399000,-2514.0000000,12.2000000,0.0000000,0.0000000,180.0000000); //object(cj_padlock) (1)
		katanac2 = CreateObject(2680,2849.6001000,-2467.6001000,12.3000000,0.0000000,0.0000000,13.9950000); //object(cj_padlock) (2)
		katanac3 = CreateObject(2680,2840.1001000,-2457.8999000,12.3000000,0.0000000,0.0000000,113.9910000); //object(cj_padlock) (3)

		levaVrata2 = CreateObject(2678,2848.8000000,-2467.3999000,12.3000000,0.0000000,0.0000000,1.2500000); //object(cj_chris_crate_ld) (1)
		levaVrata3 = CreateObject(2678,2839.8999000,-2458.7000000,12.3000000,0.0000000,0.0000000,91.2470000); //object(cj_chris_crate_ld) (2)
		levaVrata1 = CreateObject(2678,2845.2000000,-2514.2000000,12.2000000,0.0000000,0.0000000,178.9970000); //object(cj_chris_crate_ld) (4)
		desnaVrata1 = CreateObject(2679,2843.6699000,-2514.2002000,12.2000000,0.0000000,0.0000000,179.9950000); //object(cj_chris_crate_rd) (1)
		desnaVrata2 = CreateObject(2679,2850.3000000,-2467.3999000,12.3000000,0.0000000,0.0000000,359.9950000); //object(cj_chris_crate_rd) (3)
		desnaVrata3 = CreateObject(2679,2839.8601000,-2457.2002000,12.3000000,0.0000000,0.0000000,91.9890000); //object(cj_chris_crate_rd) (4)

		hangarUlazKapija1 = CreateObject(969,2719.8999000,-2508.3000000,12.5000000,0.0000000,0.0000000,90.0000000); //object(electricgate) (1)
		hangarUlazKapija2 = CreateObject(969,2719.8999000,-2409.7000000,12.5000000,0.0000000,0.0000000,90.0000000); //object(electricgate) (2)

		//-------------------------BRODIC---------------------

		CreateDynamicObject(9585,2716.7002000,-2270.7998000,8.0000000,0.0000000,0.0000000,178.7480000); //object(freight_sfw33)(2)
		CreateDynamicObject(9586,2718.9004000,-2270.7998000,18.2000000,0.0000000,0.0000000,178.7480000); //object(freight_deck_sfw)(2)
		CreateDynamicObject(9584,2791.7002000,-2272.5000000,27.2000000,0.0000000,0.0000000,178.7480000); //object(freight_sfw31)(2)
		CreateDynamicObject(9590,2710.2998000,-2270.5996000,9.9000000,0.0000000,0.0000000,178.7480000); //object(freight_interiorsfw)(2)
		CreateDynamicObject(9761,2718.2998000,-2270.8994000,28.1000000,0.0000000,0.0000000,178.7480000); //object(freight_alfa_sfw)(2)
		CreateDynamicObject(9587,2707.7998000,-2270.5000000,24.7000000,0.0000000,0.0000000,178.7420000); //object(freight_box_sfw01)(3)
		CreateDynamicObject(9588,2711.0000000,-2270.5996000,8.8000000,0.0000000,0.0000000,178.7480000); //object(freightbox_insfw)(2)
		CreateDynamicObject(9698,2780.2305000,-2271.0801000,30.0800000,0.0000000,0.0000000,178.6930000); //object(bridge_argh)(1)
		CreateDynamicObject(7657,2741.5000000,-2268.1001000,17.2000000,270.2470000,0.0000000,88.7480000); //object(plasticsgate1)(2)
		CreateDynamicObject(9818,2776.9004000,-2272.0996000,34.9000000,0.0000000,0.0000000,178.4950000); //object(shpbridge_sfw01)(1)
		CreateDynamicObject(9819,2777.0000000,-2278.3994000,34.1000000,0.0000000,0.0000000,178.7480000); //object(shpbridge_sfw02)(1)
		CreateDynamicObject(9820,2781.2002000,-2272.3994000,34.1000000,0.0000000,0.0000000,178.9950000); //object(shpbridge_sfw04)(1)
		CreateDynamicObject(9821,2780.9004000,-2274.5996000,26.1000000,0.0000000,0.0000000,178.7480000); //object(shpbridge_sfw03)(1)
		CreateDynamicObject(9822,2777.2998000,-2278.0996000,33.9000000,0.0000000,0.0000000,179.2470000); //object(shpbridge_sfw08)(1)
		CreateDynamicObject(2944,2775.3000000,-2275.1001000,25.2000000,0.0000000,0.0000000,87.7450000); //object(freight_sfw_door)(1)
		CreateDynamicObject(3256,2698.1006000,-2188.7002000,12.5000000,0.0000000,0.0000000,0.0000000); //object(refchimny01)(1)
		CreateDynamicObject(3256,2736.7998000,-2193.2002000,35.1000000,0.0000000,0.0000000,303.9970000); //object(refchimny01)(2)
		CreateDynamicObject(3287,2716.2998000,-2192.0996000,35.3000000,0.0000000,0.0000000,270.2470000); //object(cxrf_oiltank)(2)
		CreateDynamicObject(2653,2722.1006000,-2192.8994000,34.4000000,0.0000000,0.0000000,259.7500000); //object(cj_aircon3)(2)
		CreateDynamicObject(2653,2729.7998000,-2194.2998000,34.4000000,0.0000000,0.0000000,259.7500000); //object(cj_aircon3)(3)
		CreateDynamicObject(2649,2710.6006000,-2192.2002000,32.1000000,0.0000000,270.0000000,0.0000000); //object(cj_aircon2)(1)
		CreateDynamicObject(1437,2751.2002000,-2212.7998000,42.5000000,0.0000000,0.5000000,182.2470000); //object(dyn_ladder_2)(2)
		CreateDynamicObject(2932,2670.3999000,-2256.3999000,21.8000000,0.0000000,0.0000000,358.5000000); //object(kmb_container_blue)(1)
		CreateDynamicObject(2932,2673.7000000,-2256.3000000,18.9000000,0.0000000,0.0000000,358.4980000); //object(kmb_container_blue)(2)
		CreateDynamicObject(2932,2676.7000000,-2256.3999000,18.9000000,0.0000000,0.0000000,358.4950000); //object(kmb_container_blue)(3)
		CreateDynamicObject(2932,2676.7000000,-2256.3999000,21.8000000,0.0000000,0.0000000,358.4950000); //object(kmb_container_blue)(4)
		CreateDynamicObject(2934,2673.5000000,-2256.3000000,21.8000000,0.0000000,0.0000000,358.5000000); //object(kmb_container_red)(1)
		CreateDynamicObject(2935,2640.2000000,-2254.8000000,18.9000000,0.0000000,0.0000000,277.2500000); //object(kmb_container_yel)(1)
		CreateDynamicObject(2935,2633.0000000,-2256.1001000,18.9000000,0.0000000,0.0000000,282.9980000); //object(kmb_container_yel)(2)
		CreateDynamicObject(2567,2646.3999000,-2253.7000000,19.4000000,0.0000000,0.0000000,4.5000000); //object(ab_warehouseshelf)(1)
		CreateDynamicObject(3633,2649.6001000,-2253.1001000,18.0000000,0.0000000,0.0000000,0.0000000); //object(imoildrum4_las)(1)
		CreateDynamicObject(3633,2649.6001000,-2253.0000000,18.9000000,0.0000000,0.0000000,0.0000000); //object(imoildrum4_las)(2)
		CreateDynamicObject(3633,2649.6001000,-2253.1001000,19.8000000,0.0000000,0.0000000,0.0000000); //object(imoildrum4_las)(3)
		CreateDynamicObject(3633,2649.7000000,-2254.5000000,18.0000000,0.0000000,0.0000000,0.0000000); //object(imoildrum4_las)(4)
		CreateDynamicObject(3633,2649.7000000,-2254.5000000,18.9000000,0.0000000,0.0000000,0.0000000); //object(imoildrum4_las)(5)
		CreateDynamicObject(2567,2646.3999000,-2253.7000000,23.3000000,0.0000000,0.0000000,4.4990000); //object(ab_warehouseshelf)(2)
		CreateDynamicObject(2935,2639.6001000,-2254.8999000,21.8000000,0.0000000,0.0000000,277.2450000); //object(kmb_container_yel)(3)
		CreateDynamicObject(2935,2632.3999000,-2256.2000000,21.8000000,0.0000000,0.0000000,282.9970000); //object(kmb_container_yel)(4)
		CreateDynamicObject(2973,2743.6001000,-2255.5000000,17.5000000,0.0000000,0.0000000,358.5000000); //object(k_cargo2)(1)
		CreateDynamicObject(2973,2746.0000000,-2255.6001000,17.5000000,0.0000000,0.0000000,358.4950000); //object(k_cargo2)(2)
		CreateDynamicObject(2973,2746.0000000,-2255.3999000,20.0000000,0.0000000,0.0000000,358.4950000); //object(k_cargo2)(3)
		CreateDynamicObject(2973,2743.6001000,-2255.3000000,20.0000000,0.0000000,0.0000000,358.4950000); //object(k_cargo2)(4)
		CreateDynamicObject(2932,2751.8000000,-2257.8000000,21.8000000,0.0000000,0.0000000,358.7450000); //object(kmb_container_blue)(8)
		CreateDynamicObject(2932,2748.7000000,-2257.8000000,21.8000000,0.0000000,0.0000000,358.7420000); //object(kmb_container_blue)(9)
		
		//----------------------KIOSK----------------------

		CreateDynamicObject(1571,2334.7000000,721.7999900,11.0000000,0.0000000,0.2500000,0.0000000); //object(cj_noodle_1)(1)
		CreateDynamicObject(1776,2336.2000000,722.0999800,10.9000000,0.0000000,0.0000000,271.5000000); //object(cj_candyvendor)(1)

		CreateDynamic3DTextLabel("Kiosk, jebo ti seb!\n /kiosk", -1, 2334.8513,720.0639,10.8203, 50.0);
		menuKiosk = CreateMenu("Deder kupi nesto!", 2, 200.0, 100.0, 150.0, 150.0);
		AddMenuItem(menuKiosk, 0, "Guska gertruda");
		AddMenuItem(menuKiosk, 1, "Kae cuda pravi!");
		AddMenuItem(menuKiosk, 0, "Objekat begi");
		AddMenuItem(menuKiosk, 0, "Telefon");
		AddMenuItem(menuKiosk, 0, "Kartica");
		CreatePickup(1239, 1,2334.8513,720.0639,10.8203,0);

		//------------------KUCE----------------------------

		database = db_open(databasename);
    	db_query(database, "CREATE TABLE IF NOT EXISTS `HOUSEINFO` (housename varchar(51), houseowner varchar(25))");

    	CreateHouse("TestHouse1", 1, 2317.130615, 692.398498, 11.460937, 266.857757, 305.001586, 999.148437, 2, 1);
		CreateHouse("TestHouse2", 1, 2346.872802, 692.999267, 11.460937, 266.857757, 305.001586, 999.148437, 2, 1);
		CreateHouse("TestHouse3", 1, 2396.482666, 691.487060, 11.453125, 2196.850341, -1204.343261, 1049.023437, 6, 1);
		CreateHouse("TestHouse4", 1, 2398.476074, 735.344665, 11.460937, 2196.850341, -1204.343261, 1049.023437, 6, 1);
		CreateHouse("TestHouse5", 1, 2368.863525, 733.627502, 11.460937, 2196.850341, -1204.343261, 1049.023437, 6, 1);
		CreateHouse("TestHouse6", 1, 2013.253906, 731.041870, 11.453125, 266.857757, 305.001586, 999.148437, 5, 1);
		CreateHouse("TestHouse7", 1, 2449.826660, 742.588806, 11.460937, 266.857757, 305.001586, 999.148437, 5, 1);
		CreateHouse("TestHouse8", 1, 2449.662353, 714.210693, 11.468292, 266.857757, 305.001586, 999.148437, 5, 1);
		AddStaticVehicleEx(451,2040.4000000,1331.7000000,10.4000000,0.0000000,37,37,-1,3);

		timeLabel = TextDrawCreate(545.000000, 6.000000, Time);
		TextDrawBackgroundColor(timeLabel, 255);
		TextDrawFont(timeLabel, 3);
		TextDrawLetterSize(timeLabel, 0.580000, 2.399999);
		TextDrawColor(timeLabel, -1);
		TextDrawSetOutline(timeLabel, 1);
		TextDrawSetProportional(timeLabel, 1);

		dateLabel = TextDrawCreate(547.000000, 26.000000, Date);
		TextDrawBackgroundColor(dateLabel, 255);
		TextDrawFont(dateLabel, 3);
		TextDrawLetterSize(dateLabel, 0.450000, 1.800000);
		TextDrawColor(dateLabel, -1);
		TextDrawSetOutline(dateLabel, 1);
		TextDrawSetProportional(dateLabel, 1);
		SetTimer("Sahat", 1000, true);

    	return 1;      
}

forward Sahat();
public Sahat()
{
	gettime(hour, minute, second);
	getdate(year, month, day);
	format(Time, sizeof(Time), "%02d:%02d:%02d", hour, minute, second);
	format(Date, sizeof(Date), "%02d/%02d/%04d", day, month, year + 5508);
	TextDrawSetString(timeLabel, Time);
	TextDrawSetString(dateLabel, Date);
}

public OnGameModeExit()
{
	mysql_close(Database);
    return 1;
}

public OnPlayerConnect(playerid)
{
	TextDrawShowForPlayer(playerid, timeLabel);
	TextDrawShowForPlayer(playerid, dateLabel);


	SendClientMessage(playerid, -1, "DJES JEBEM TI KRUh");
	RemoveBuildingForPlayer(playerid, 3724, 2838.1953, -2488.6641, 29.3125, 42.945503);
	RemoveBuildingForPlayer(playerid, 5352, 2838.1953, -2488.6641, 29.3125, 42.945503);
	RemoveBuildingForPlayer(playerid, 3624, 2788.1563, -2455.8828, 16.72656, 28.236382);
	RemoveBuildingForPlayer(playerid, 3710, 2788.1563, -2455.8828, 16.72656, 28.236382);
	RemoveBuildingForPlayer(playerid, 3761, 2797.5156, -2448.3437, 14.63281, 8.426527);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2463.8203, 14.63281, 8.426527);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2448.4766, 14.63281, 8.426527);
	RemoveBuildingForPlayer(playerid, 3624, 2788.1563, -2417.7891, 16.72656, 28.236382);
	RemoveBuildingForPlayer(playerid, 3710, 2788.1563, -2417.7891, 16.72656, 28.236382);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2425.3516, 14.67188, 8.426527);
	RemoveBuildingForPlayer(playerid, 3761, 2797.5156, -2410.0781, 14.63281, 8.426527);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2410.2109, 14.67188, 8.426527);
	RemoveBuildingForPlayer(playerid, 16094, 191.14063, 1870.0391, 21.47656, 120.60289); // removeWorldObject (des_a51infenc) (1)
	RemoveBuildingForPlayer(playerid, 3280, 264.14606, 1822.2117, 3.82989, 3.1313734); // removeWorldObject (a51_panel) (1)
	RemoveBuildingForPlayer(playerid, 3280, 298.8497, 1819.9238, 4.36482, 3.1313734); // removeWorldObject (a51_panel) (2)
	RemoveBuildingForPlayer(playerid, 16641, 251.44531, 1866.3047, 9.28906, 14.876859); // removeWorldObject (des_a51warheads) (1)
	RemoveBuildingForPlayer(playerid, 16322, 248.72656, 1869.9844, 11.85156, 8.6293869); // removeWorldObject (a51_plat) (1)
	RemoveBuildingForPlayer(playerid, 3260, 258.70419, 1861.8572, 9.56816, 3.7985449); // removeWorldObject (oldwoodpanel) (1)
	RemoveBuildingForPlayer(playerid, 3260, 258.12247, 1867.0573, 9.49702, 3.7985449); // removeWorldObject (oldwoodpanel) (2)

	RemoveBuildingForPlayer(playerid, 3643, 2694.8047, -2191.4453, 17.59375, 11.595366);
	RemoveBuildingForPlayer(playerid, 3745, 2694.8047, -2191.4453, 17.59375, 11.595366);
	RemoveBuildingForPlayer(playerid, 3674, 2734.2734, -2193.6562, 39.03125, 24.350447);
	RemoveBuildingForPlayer(playerid, 3574, 2666.3984, -2239.1016, 15.20313, 13.891983);
	RemoveBuildingForPlayer(playerid, 3744, 2666.3984, -2239.1016, 15.20313, 13.891983);


	new str[1024];
	GetPlayerName(playerid,PlayerInfo[playerid][Name], MAX_PLAYER_NAME);
	mysql_format(Database, str, sizeof(str), "SELECT * FROM `users` WHERE `Name` = '%e' LIMIT 1", GetName(playerid));
	mysql_tquery(Database, str, "OnPlayerDataCheck","i", playerid);

	PogresnaLozinka[playerid] = 0;
	TogglePlayerSpectating(playerid, false);
  
    return 1;
}

forward OnPlayerDataCheck(playerid);
public OnPlayerDataCheck(playerid)
{
	new row;
	cache_get_row_count(row);
	if(row > 0)
	{
		cache_get_value(0, "Password", PlayerInfo[playerid][Password], 65);
		ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD,""COL_WHITE"Login",""COL_WHITE"Welcome to the P"COL_RED".I."COL_WHITE"M.P.\n"COL_WHITE"Type your password below to login.","Login","Quit");
	}
	else
    {
        ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD,""COL_WHITE"Registering...",""COL_WHITE"Type your password below to register a new account.","Register","Quit");
    }

	return 1;
}
 
public OnPlayerDisconnect(playerid, reason)
{
    SavePlayer(playerid);
    
    return 1;
}

stock CreateHouse(HouseName[], CostP, Float:EnterX, Float:EnterY, Float:EnterZ, Float:TeleX, Float:TeleY, Float:TeleZ, Interiorx, SellP)
{
    format(HouseInformation[houseid][Hname], 100, "%s", HouseName);
    HouseInformation[houseid][costprice] = CostP;
    HouseInformation[houseid][EnterPos][0] = EnterX;
    HouseInformation[houseid][EnterPos][1] = EnterY;
    HouseInformation[houseid][EnterPos][2] = EnterZ;
    HouseInformation[houseid][TelePos][0] = TeleX;
    HouseInformation[houseid][TelePos][1] = TeleY;
    HouseInformation[houseid][TelePos][2] = TeleZ;
    HouseInformation[houseid][sellprice] = SellP;
    HouseInformation[houseid][interiors] = Interiorx;
    format(fquery, sizeof(fquery), "SELECT houseowner FROM HOUSEINFO WHERE housename = '%s'", HouseName); //Formats the SELECT query
    queryresult = db_query(database, fquery); //Query result variable has been used to query the string above.
    if(db_num_rows(queryresult) != 0) db_get_field_assoc(queryresult, "houseowner", HouseInformation[houseid][owner], 24); //Fetches the field information  db_free_result(queryresult);
    HouseInformation[houseid][checkpointidx][0] = CreateDynamicCP(EnterX, EnterY, EnterZ, 1.0);
    //CreateDynamicCP(Float:x, Float:y, Float:z, Float:size);
    HouseInformation[houseid][checkpointidx][1] = CreateDynamicCP(TeleX, TeleY, TeleZ, 1.0, 15500000+houseid, Interiorx);
    //CreateDynamicCP(Float:x, Float:y, Float:z, Float:size, worldid, interiorid);
    if(!HouseInformation[houseid][owner][0]) format(fquery, sizeof(fquery), "House Name: %s \n House Price:$%d \n Sell Price: $%d", HouseName, CostP, SellP);
    //If there is nothing in the owners variable, we check if the first cell doesn't have a character.
    else if(HouseInformation[houseid][owner][0] != 0) format(fquery, sizeof(fquery), "House Name: %s \n Owner: %s", HouseName, HouseInformation[houseid][owner]);
    //If there is something in the owners variable we check if the first cell has a character.
    HouseInformation[houseid][textid] = CreateDynamic3DTextLabel(fquery, 0xFFFFFF, EnterX, EnterY, EnterZ + 0.5, 50.0);
    //CreateDynamic3DTextLabel(const text[], color, Float:x, Float:y, Float:z, Float:drawdistance, attachedplayer = INVALID_PLAYER_ID, attachedvehicle = INVALID_VEHICLE_ID, testlos = 0, worldid = -1, interiorid = -1, playerid = -1, Float:distance = 100.0);
    houseid ++; //We go to the next free slot in our variable.
    return 1;
}
 
stock SetOwner(HouseName[], ownername[], houseids)
{
    format(fquery, sizeof(fquery), "INSERT INTO `HOUSEINFO` (`housename`, `houseowner`)  VALUES('%s', '%s')", HouseName, ownername);
    db_query(database, fquery); //Queries the SQLite database.
    format(HouseInformation[houseids][owner], 24, "%s", ownername);
    format(fquery, sizeof(fquery), "House Name: %s \n Owner: %s", HouseName, HouseInformation[houseids][owner]);
    UpdateDynamic3DTextLabelText(HouseInformation[houseids][textid], 0xFFFFFF, fquery); //Updates the text label.
    return 1;
}

stock DeleteOwner(HouseName[], houseids)
{
    format(HouseInformation[houseids][owner], 24, "%s", "\0");
    format(fquery, sizeof(fquery), "DELETE FROM `HOUSEINFO` WHERE `housename` = '%s'", HouseName);
    db_query(database, fquery); //Queries the SQLite database.
    format(fquery, sizeof(fquery), "House Name: %s \n House Price:$%d \n Sell Price: $%d", HouseName, HouseInformation[houseids][costprice], HouseInformation[houseids][sellprice]);
    UpdateDynamic3DTextLabelText(HouseInformation[houseids][textid], 0xFFFFFF, fquery); //Updates the text label.
    return 1;
}

public OnPlayerSpawn(playerid)
{
	if (Injured[playerid] == 1)
    {
        SetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid]);
        SetPlayerFacingAngle(playerid, Angle[playerid]);
        SetCameraBehindPlayer(playerid);
        SetPlayerSkin(playerid, PlayerInfo[playerid][Skin]);
        SendClientMessage(playerid, COLOR_LIGHTRED, "You are injured.");
        SendClientMessage(playerid, COLOR_LIGHTRED, "Either wait for assistance or /acceptdeath.");
        AcceptDeathTimer[playerid] = SetTimerEx("CanAcceptDeath", 5000, false, "i", playerid);
        LoseHealthTimer[playerid] = SetTimerEx("LoseHealth", 10000, true, "i", playerid);
        ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 1, 0, 1);
    }
   
    if (Hospitalized[playerid] == 1)
    {
        SetTimerEx("HospitalTimer", 10000, false, "i", playerid);
        TogglePlayerControllable(playerid,0);
        SetPlayerPos(playerid, 1169.9645, -1323.8893, 15.6929);
        SetPlayerCameraPos(playerid, 1201.5150, -1323.3530, 24.7329);
        SetPlayerCameraLookAt(playerid, 1173.2358, -1323.2872, 19.4348);
        SendClientMessage(playerid, COLOR_GRAY, "You must stay 10 seconds at the hospital to recover.");
        GameTextForPlayer(playerid, "~n~~w~Recovering...", 10000, 3);
        GivePlayerMoney(playerid, -300);
        SetPlayerSkin(playerid, PlayerInfo[playerid][Skin]);
        PlayerInfo[playerid][Weapon1Ammo] = 0;
		PlayerInfo[playerid][Weapon2Ammo] = 0;
		PlayerInfo[playerid][Weapon3Ammo] = 0;
		PlayerInfo[playerid][Weapon1] = 0;
		PlayerInfo[playerid][Weapon2] = 0;
	    PlayerInfo[playerid][Weapon3] = 0;
    }
    if (Injured[playerid] == 0 && Hospitalized[playerid] == 0)
    {
        SetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid]);
        SetPlayerFacingAngle(playerid, Angle[playerid]);
        SetPlayerInterior(playerid, Interior[playerid]);

        SetPlayerSkin(playerid, PlayerInfo[playerid][Skin]);
        GivePlayerMoney(playerid, PlayerInfo[playerid][Cash]);

        SetPlayerColor(playerid, -1);
        
        GivePlayerWeapon(playerid, PlayerInfo[playerid][Weapon1], PlayerInfo[playerid][Weapon1Ammo]);
        GivePlayerWeapon(playerid, PlayerInfo[playerid][Weapon2], PlayerInfo[playerid][Weapon2Ammo]);
        GivePlayerWeapon(playerid, PlayerInfo[playerid][Weapon3], PlayerInfo[playerid][Weapon3Ammo]);

        SetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);

        SetPlayerVirtualWorld(playerid, VirtualWorld[ playerid ]);
        SendClientMessage(playerid, -1, "welcome to your last position" ); 		
    }
	
    return 1;
}
 
public OnPlayerDeath(playerid, killerid, reason)
{	
	if (Injured[playerid] == 0)
    {
        Injured[playerid] = 1;
        GetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid]);
        GetPlayerFacingAngle(playerid, Angle[playerid]);
        CarryBox[playerid] = false;
        RemovePlayerAttachedObject(playerid, 0);
    }
    else if (Injured[playerid] == 1)
    {
        KillTimer(AcceptDeathTimer[playerid]);
        KillTimer(LoseHealthTimer[playerid]);
        AcceptDeath[playerid] = 0;
        Injured[playerid] = 0;
        Hospitalized[playerid] = 1;
        GetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid]);
        CarryBox[playerid] = false;
        RemovePlayerAttachedObject(playerid, 0);     
	}

    PlayerInfo[killerid][Kills]++;
	PlayerInfo[playerid][Deaths]++;
	PlayerInfo[playerid][Weapon1Ammo] = 0;
	PlayerInfo[playerid][Weapon2Ammo] = 0;
	PlayerInfo[playerid][Weapon3Ammo] = 0;
	PlayerInfo[playerid][Weapon1] = 0;
	PlayerInfo[playerid][Weapon2] = 0;
    PlayerInfo[playerid][Weapon3] = 0;
	PlayerInfo[playerid][Cash] = GetPlayerMoney(playerid);   
    return 1;
}
 
public OnVehicleSpawn(vehicleid)
{
    new model = GetVehicleModel(vehicleid);
    if (model == 417 || model == 425 || model == 447 || model == 460 || model == 469 || model == 476 || model == 487 || model == 488 || model == 497 || model == 511 || 
    	model == 512 || model == 513 || model == 519 || model == 520 || model == 548 || model == 553 || model == 563 || model == 577 || model == 592 || model == 593)
    {
    	
    	return 1;
    }
    else
    {
    	new engine, lights, alarm, doors, bonnet, boot, objective;
   		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    	return SetVehicleParamsEx(vehicleid,0,0,0,0,0,0,0);
    }         
}
 
public OnVehicleDeath(vehicleid, killerid)
{
        return 1;
}
 
public OnPlayerText(playerid, text[])
{
	if(IC_CHAT == 1){
	    new strChat[256];
	    new ImeIgraca[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, ImeIgraca, sizeof(ImeIgraca));
	    format(strChat,sizeof(strChat), "%s kaze: %s",ImeIgraca, text);
	    ProxDetector(20.0, playerid, strChat, boja_bela,boja_bela,boja_bela,boja_bela,boja_bela);
	    return false;
	}
    return 1;
}

//---------------KOMANDE-------------

CMD:me(playerid, params[]){
	new textChat[1024];
	if(sscanf(params, "s[80]", textChat)) return SendClientMessage(playerid, -1,"{FF0000}USAGE: {FFFFFF}/me [Text]");
	new strChat[256];
	new ImeIgraca[MAX_PLAYER_NAME];
 	GetPlayerName(playerid, ImeIgraca, sizeof(ImeIgraca));
 	format(strChat,sizeof(strChat), "* %s %s *",ImeIgraca, textChat);
 	ProxDetector(20.0, playerid, strChat, 0x8080C0FF,0x8080C0FF,0x8080C0FF,0x8080C0FF,0x8080C0FF);
	return 1;
}

CMD:do(playerid, params[]){
	new textChat[1024];
	if(sscanf(params, "s[80]", textChat)) return SendClientMessage(playerid, -1,"{FF0000}USAGE: {FFFFFF}/do [Text]");
	new strChat[256];
	new ImeIgraca[MAX_PLAYER_NAME];
 	GetPlayerName(playerid, ImeIgraca, sizeof(ImeIgraca));
 	format(strChat,sizeof(strChat), "* %s (( %s )) *", textChat, ImeIgraca);
 	ProxDetector(20.0, playerid, strChat, 0x8080C0FF,0x8080C0FF,0x8080C0FF,0x8080C0FF,0x8080C0FF);
	return 1;
}

CMD:b(playerid, params[]){
	new textChat[1024];
	if(sscanf(params, "s[80]", textChat)) return SendClientMessage(playerid, -1,"{FF0000}USAGE: {FFFFFF}/b [Text]");
	new strChat[256];
	new ImeIgraca[MAX_PLAYER_NAME];
 	GetPlayerName(playerid, ImeIgraca, sizeof(ImeIgraca));
 	format(strChat,sizeof(strChat), "{C0C0C0}(( [OOC] {FFFFFF}%s kaze : %s {C0C0C0}))",ImeIgraca, textChat);
 	ProxDetector(20.0, playerid, strChat, COLOR_GRAY,COLOR_GRAY,COLOR_GRAY,COLOR_GRAY,COLOR_GRAY);
	return 1;
}

CMD:s(playerid, params[]){
	new textChat[1024];
	if(sscanf(params, "s[80]", textChat)) return SendClientMessage(playerid, -1,"{FF0000}USAGE: {FFFFFF}/s [Text]");
	new strChat[256];
	new ImeIgraca[MAX_PLAYER_NAME];
 	GetPlayerName(playerid, ImeIgraca, sizeof(ImeIgraca));
 	format(strChat,sizeof(strChat), "%s vice : %s !!!",ImeIgraca, textChat);
 	ProxDetector(40.0, playerid, strChat, 0xFFFF00FF,0xFFFF00FF,0xFFFF00FF,0xFFFF00FF,0xFFFF00FF);
	return 1;
}

CMD:pee(playerid)
{
	SetPlayerSpecialAction(playerid, 68);
	return 1;
}

CMD:carry(playerid)
{	
	if(CarryBox[playerid] == true)
	{
		return SendClientMessage(playerid, -1, "Vec nosis kutiju!");
	}
	else if((IsPlayerInAnyVehicle(playerid) == 0) && !(GetPlayerSpecialAction(playerid) == 3))
	{
		SetPlayerSpecialAction(playerid, 25);
		SetPlayerAttachedObject(playerid, 0, 3052, 5,0.071999, 0.076999, 0.166000, -83.599937, -6.799918, 108.800018, 1.000000, 1.000000, 1.000000);
		CarryBox[playerid] = true;
	}
	else SendClientMessage(playerid, -1, "Nemere kutija u vozilu, jebo ti seb!");
	
	return 1;
}

CMD:spusti(playerid)
{
	if(CarryBox[playerid] == true)
	{
		SetPlayerSpecialAction(playerid, 0);
		RemovePlayerAttachedObject(playerid, 0);
		CarryBox[playerid] = false;
	}
	return 1;
}

CMD:rocketman(playerid, params[])
{
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
	return 1;
}

CMD:setskin(playerid, params[])
{
	new id, skin;
	if(sscanf(params, "ui", id, skin)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /setskin <playerid> <skinid>");
	else if(id == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije konektovan");
	else
	{
		SetPlayerSkin(id, skin);
		PlayerInfo[id][Skin] = skin;
	}
	return 1;
}

CMD:givegun(playerid,params[])
{
	new id, ammo, diff, oruzje1, oruzje2;
	if(sscanf(params, "ui", id, ammo)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /givegun <playerid> <ammo>");
	else if(id == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije konektovan");
	else if(playerid == id)
	{
		return SendClientMessage(playerid, -1, "Nemeres sebi dati jebo ti seb!");
	}
	else if(IsPlayerInAnyVehicle(id) == 1 || GetPlayerSpecialAction(id) == 3)
	{
		return SendClientMessage(playerid, -1, "Nemeres dati oruzje igracu koji je u vozilu!");
	}
	else
	{
		GetPlayerPos(id, PosX[id], PosY[id], PosZ[id]);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, PosX[id], PosY[id], PosZ[id]))
		{
			oruzje1 = GetPlayerWeapon(playerid);
			//oruzje2 = GetPlayerWeapon(id);
			if((PlayerInfo[id][Weapon1] == 22 && oruzje1 == 24 || PlayerInfo[id][Weapon1] == 24 && oruzje1 == 22) || 
		        	(PlayerInfo[id][Weapon1] == 25 && oruzje1 == 26 || PlayerInfo[id][Weapon1] == 25 && oruzje1 == 27 || PlayerInfo[id][Weapon1] == 26 && oruzje1 == 25 || PlayerInfo[id][Weapon1] == 26 && oruzje1 == 27 || PlayerInfo[id][Weapon1] == 27 && oruzje1 == 25 || PlayerInfo[id][Weapon1] == 27 && oruzje1 == 26) ||
		        	(PlayerInfo[id][Weapon1] == 28 && oruzje1 == 29 || PlayerInfo[id][Weapon1] == 28 && oruzje1 == 32 || PlayerInfo[id][Weapon1] == 29 && oruzje1 == 28 || PlayerInfo[id][Weapon1] == 29 && oruzje1 == 32 || PlayerInfo[id][Weapon1] == 32 && oruzje1 == 28 || PlayerInfo[id][Weapon1] == 32 && oruzje1 == 29) ||
		        	(PlayerInfo[id][Weapon1] == 30 && oruzje1 == 31 || PlayerInfo[id][Weapon1] == 31 && oruzje1 == 30) ||
		        	(PlayerInfo[id][Weapon1] == 33 && oruzje1 == 34 || PlayerInfo[id][Weapon1] == 34 && oruzje1 == 33))
		    {
		        return SendClientMessage(playerid, -1, "Domacin vec ima nesto slicno ljudino");
		    }
		    else if((PlayerInfo[id][Weapon2] == 22 && oruzje1 == 24 || PlayerInfo[id][Weapon2] == 24 && oruzje1 == 22) || 
		        	(PlayerInfo[id][Weapon2] == 25 && oruzje1 == 26 || PlayerInfo[id][Weapon2] == 25 && oruzje1 == 27 || PlayerInfo[id][Weapon2] == 26 && oruzje1 == 25 || PlayerInfo[id][Weapon2] == 26 && oruzje1 == 27 || PlayerInfo[id][Weapon2] == 27 && oruzje1 == 25 || PlayerInfo[id][Weapon2] == 27 && oruzje1 == 26) ||
		        	(PlayerInfo[id][Weapon2] == 28 && oruzje1 == 29 || PlayerInfo[id][Weapon2] == 28 && oruzje1 == 32 || PlayerInfo[id][Weapon2] == 29 && oruzje1 == 28 || PlayerInfo[id][Weapon2] == 29 && oruzje1 == 32 || PlayerInfo[id][Weapon2] == 32 && oruzje1 == 28 || PlayerInfo[id][Weapon2] == 32 && oruzje1 == 29) ||
		        	(PlayerInfo[id][Weapon2] == 30 && oruzje1 == 31 || PlayerInfo[id][Weapon2] == 31 && oruzje1 == 30) ||
		        	(PlayerInfo[id][Weapon2] == 33 && oruzje1 == 34 || PlayerInfo[id][Weapon2] == 34 && oruzje1 == 33))
		    {
		        return SendClientMessage(playerid, -1, "Domacin vec ima nesto slicno ljudino");
		    }	
		    else if((PlayerInfo[id][Weapon3] == 22 && oruzje1 == 24 || PlayerInfo[id][Weapon3] == 24 && oruzje1 == 22) || 
		        	(PlayerInfo[id][Weapon3] == 25 && oruzje1 == 26 || PlayerInfo[id][Weapon3] == 25 && oruzje1 == 27 || PlayerInfo[id][Weapon3] == 26 && oruzje1 == 25 || PlayerInfo[id][Weapon3] == 26 && oruzje1 == 27 || PlayerInfo[id][Weapon3] == 27 && oruzje1 == 25 || PlayerInfo[id][Weapon3] == 27 && oruzje1 == 26) ||
		        	(PlayerInfo[id][Weapon3] == 28 && oruzje1 == 29 || PlayerInfo[id][Weapon3] == 28 && oruzje1 == 32 || PlayerInfo[id][Weapon3] == 29 && oruzje1 == 28 || PlayerInfo[id][Weapon3] == 29 && oruzje1 == 32 || PlayerInfo[id][Weapon3] == 32 && oruzje1 == 28 || PlayerInfo[id][Weapon3] == 32 && oruzje1 == 29) ||
		        	(PlayerInfo[id][Weapon3] == 30 && oruzje1 == 31 || PlayerInfo[id][Weapon3] == 31 && oruzje1 == 30) ||
		        	(PlayerInfo[id][Weapon3] == 33 && oruzje1 == 34 || PlayerInfo[id][Weapon3] == 34 && oruzje1 == 33))
		    {
		        return SendClientMessage(playerid, -1, "Domacin vec ima nesto slicno ljudino");
		    }
			else if(GetPlayerAmmo(playerid)>ammo && ammo>0)
			{
				diff = GetPlayerAmmo(playerid) - ammo;

				if(PlayerInfo[id][Weapon1] == oruzje1)
		        {
		            GivePlayerWeapon(id, oruzje1, ammo);
		            PlayerInfo[id][Weapon1] = oruzje1;
					SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
		        }
		        else if(PlayerInfo[id][Weapon2] == oruzje1)
		        {
		            GivePlayerWeapon(id, oruzje1, ammo);
		            PlayerInfo[id][Weapon2] = oruzje1;
					SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
		        }
		        else if(PlayerInfo[id][Weapon3] == oruzje1)
		        {
		            GivePlayerWeapon(id, oruzje1, ammo);
		            PlayerInfo[id][Weapon3] = oruzje1;
					SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
		        }
		        else
		        {
		        	SendClientMessage(playerid, 0xCC0000, "prc!");
		            if(PlayerInfo[id][Weapon1] == 0 )
		            {
		                GivePlayerWeapon(id, oruzje1, ammo);
		            	PlayerInfo[id][Weapon1] = oruzje1;
						SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
		            }
		            else if(PlayerInfo[id][Weapon2] == 0 )
		            {
		                GivePlayerWeapon(id, oruzje1, ammo);
		            	PlayerInfo[id][Weapon2] = oruzje1;
						SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
		            }
		            else if(PlayerInfo[id][Weapon3] == 0 )
		            {
		                GivePlayerWeapon(id, oruzje1, ammo);
		            	PlayerInfo[id][Weapon3] = oruzje1;
						SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);  
		            }
		            else
		            {
		                SendClientMessage(playerid, 0xCC0000, "Svi slotovi za oruzje su zauzeti!");
		            }
		        }
			}
			else if(GetPlayerAmmo(playerid) == ammo && ammo>0)
			{
				diff = GetPlayerAmmo(playerid) - ammo;
				new tempSlot;
				if(oruzje1 == PlayerInfo[playerid][Weapon1])
				{
					tempSlot = 1;
				}
				else if(oruzje1 == PlayerInfo[playerid][Weapon2])
				{
					tempSlot = 2;
				}
				else if(oruzje1 == PlayerInfo[playerid][Weapon3])
				{
					tempSlot = 3;
				}

				if(PlayerInfo[id][Weapon1] == oruzje1)
		        {
		            GivePlayerWeapon(id, oruzje1, ammo);
		            PlayerInfo[id][Weapon1] = oruzje1;
					SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
					if(tempSlot == 1)
					{
						PlayerInfo[playerid][Weapon1] = 0;
					}
					else if(tempSlot == 2)
					{
						PlayerInfo[playerid][Weapon2] = 0;
					}
					else
					{
						PlayerInfo[playerid][Weapon3] = 0;
					}
		        }

		        else if(PlayerInfo[id][Weapon2] == oruzje1 )
		        {
		            GivePlayerWeapon(id, oruzje1, ammo);
		            PlayerInfo[id][Weapon2] = oruzje1;
					SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
					if(tempSlot == 1)
					{
						PlayerInfo[playerid][Weapon1] = 0;
					}
					else if(tempSlot == 2)
					{
						PlayerInfo[playerid][Weapon2] = 0;
					}
					else
					{
						PlayerInfo[playerid][Weapon3] = 0;
					}
		        }

		        else if(PlayerInfo[id][Weapon3] == oruzje1 )
		        {
		            GivePlayerWeapon(id, oruzje1, ammo);
		            PlayerInfo[id][Weapon3] = oruzje1;
					SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
					if(tempSlot == 1)
					{
						PlayerInfo[playerid][Weapon1] = 0;
					}
					else if(tempSlot == 2)
					{
						PlayerInfo[playerid][Weapon2] = 0;
					}
					else
					{
						PlayerInfo[playerid][Weapon3] = 0;
					}
		        }
		        else
		        {
		        	SendClientMessage(playerid, 0xCC0000, "prc!");
		            if(PlayerInfo[id][Weapon1] == 0 )
		            {
		                GivePlayerWeapon(id, oruzje1, ammo);
		            	PlayerInfo[id][Weapon1] = oruzje1;
						SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
						if(tempSlot == 1)
						{
							PlayerInfo[playerid][Weapon1] = 0;
						}
						else if(tempSlot == 2)
						{
							PlayerInfo[playerid][Weapon2] = 0;
						}
						else
						{
							PlayerInfo[playerid][Weapon3] = 0;
						}
		            }
		            else if(PlayerInfo[id][Weapon2] == 0 )
		            {
		                GivePlayerWeapon(id, oruzje1, ammo);
		            	PlayerInfo[id][Weapon2] = oruzje1;
						SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
						if(tempSlot == 1)
						{
							PlayerInfo[playerid][Weapon1] = 0;
						}
						else if(tempSlot == 2)
						{
							PlayerInfo[playerid][Weapon2] = 0;
						}
						else
						{
							PlayerInfo[playerid][Weapon3] = 0;
						}
		            }
		            else if(PlayerInfo[id][Weapon3] == 0 )
		            {
		                GivePlayerWeapon(id, oruzje1, ammo);
		            	PlayerInfo[id][Weapon3] = oruzje1;
						SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), diff);
						if(tempSlot == 1)
						{
							PlayerInfo[playerid][Weapon1] = 0;
						}
						else if(tempSlot == 2)
						{
							PlayerInfo[playerid][Weapon2] = 0;
						}
						else
						{
							PlayerInfo[playerid][Weapon3] = 0;
						}  
		            }
		            else
		            {
		                SendClientMessage(playerid, 0xCC0000, "Svi slotovi za oruzje su zauzeti!");
		            }
		        }
			}
			else
			{
				SendClientMessage(playerid, 0xCC0000, "Nemas dovoljno municije!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije blizu vas!");
		}	
	}
	return 1;

}

CMD:tuning(playerid, params[])
{
    new veh = GetPlayerVehicleID(playerid);
    SetVehicleHealth(veh, 3000);
    SendClientMessage(playerid, 0x00FF22, "Boom madjija!");
    return 1;
}
CMD:killme(playerid, params[])
{
	SetPlayerHealth(playerid, 0.0);
	return 1;
}
CMD:acceptdeath(playerid, params[])
{
  if (Injured[playerid] == 1)
  {
    if (AcceptDeath[playerid] == 1)
    {
        SetPlayerHealth(playerid, 0.0);
        KillTimer(LoseHealthTimer[playerid]);
        SendClientMessage(playerid, COLOR_GRAY, "You have accepted death.");
       
    }
    else if (AcceptDeath[playerid] == 0)
    {
        SendClientMessage(playerid, COLOR_GRAY, "You must wait at least 1 minute before accepting death.");
    }
  }
  else if (Injured[playerid] == 0)
  {
    SendClientMessage(playerid, COLOR_GRAY, "You are not injured right now.");
  }
  return 1;
}
 
CMD:revive(playerid, params[])
{
    new targetid;
   
    if (!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_GRAY, "You are not an admin.");
   
    if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, COLOR_GRAY, "Usage: /revive [playerid]");
 
    if (targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAY, "That player is not online.");
   
    if (Injured[targetid] == 0) return SendClientMessage(playerid, COLOR_GRAY, "That player is not injured.");
   
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
   
    new targetname[MAX_PLAYER_NAME];
    GetPlayerName(targetid, targetname, sizeof(targetname));
   
    new string[24+MAX_PLAYER_NAME];
   
    format(string, sizeof(string), "You have revived %s.", targetname);
    SendClientMessage(playerid, -1, string);
   
    format(string, sizeof(string), "%s has revived you.", playername);
    SendClientMessage(targetid, -1, string);
   
    KillTimer(AcceptDeathTimer[targetid]);
    KillTimer(LoseHealthTimer[targetid]);
    AcceptDeath[targetid] = 0;
    Injured[targetid] = 0;
    ClearAnimations(targetid);
    SetPlayerHealth(targetid, 100.0);
    return 1;
}

CMD:stuck(playerid)
{
	GetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid]);
	SetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid] + 5);
	TogglePlayerControllable(playerid, 1);

	return 1;
}

CMD:slap(playerid,params[])
{
	new id;
	if(sscanf(params, "u", id)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /slap <playerid>");
	else if(id == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije konektovan");
	else
	{
		GetPlayerPos(id, PosX[id], PosY[id], PosZ[id]);
		SetPlayerPos(id, PosX[id], PosY[id], PosZ[id] + 5);
	}

	return 1;
}

CMD:steal(playerid, params[])
{
	new id;
	if(sscanf(params, "u", id)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /steal <playerid>");
	else if(id == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije konektovan");
	else if(playerid == id)
	{
		return SendClientMessage(playerid, -1, "Malo ti je sto vreme krades od sebe, hoces i pare?");
	}
	else
	{
		GetPlayerPos(id, PosX[id], PosY[id], PosZ[id]);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, PosX[id], PosY[id], PosZ[id]))
		{
			if(GetPlayerMoney(id) >= 1000)
			{
				GivePlayerMoney(id, -1000);
				GivePlayerMoney(playerid, 1000);
			}
			else
			{
				SendClientMessage(playerid, 0xFFFF00AA, "Igrac nema dovoljno novca!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije blizu vas!");
		}	
	}
	return 1;
}

CMD:pokreniposao(playerid)
{
    if(PlayerInfo[playerid][JobActivity] != 0){
        SendClientMessage(playerid, 0xFFFFFF, "Vec ste pokrenuli posao.");
    }
    else if(PlayerInfo[playerid][Job] == 0)
    {
    	return SendClientMessage(playerid, -1, "Nemate posao!");
    }
    else if(PlayerInfo[playerid][Job] == 1){
        SetPlayerCheckpoint(playerid, 2327.130615, 710.398498, 11.460937, 3.0);
        PlayerInfo[playerid][JobActivity] = 1;
        SendClientMessage(playerid, 0xFFFFFF, "Idite na marker.");
    }
    return 1;
}

CMD:deminer(playerid)
{
    if(PlayerInfo[playerid][Job] != 0)
    {
        return SendClientMessage(playerid, 0x00FF00, "Vec imate posao!");
    }
    else if(GetPlayerDistanceFromPoint(playerid, 2317.130615, 692.398498, 11.460937) <=10){
        SendClientMessage(playerid, 0xFFFFFF, "Zaposlili ste se kao deminer. Cestitamo!");
        SetPlayerSkin(playerid, 277);
        PlayerInfo[playerid][Job] = 1;
        return 1;
    }
    else if(PlayerInfo[playerid][Job] == 1)
    {
    	return SendClientMessage(playerid, -1, "Vec imate taj posao!");
    }
    else 
    {
    	return SendClientMessage(playerid, -1, "Predaleko ste!");
    }
   
}

CMD:buygun(playerid,params[])
{
	if(GetPlayerDistanceFromPoint(playerid, 2317.130615, 692.398498, 11.460937) <=10)
	{
	
        new option;
        new option2;

    	if(sscanf(params,  "ii", option, option2)) 
    	{
	    	SendClientMessage(playerid, 0xA6FFA6FF, "ID 22 : Colt (ammo=150$)    ||  ID 24 : Deagle (ammo=150$)");
	        SendClientMessage(playerid, 0xA6FFA6FF, "ID 25 : Shotgun (ammo=100$) ||  ID 26 : Sawnoff (ammo=100$) ||  ID 27 : Combat (ammo=100$)");
	        SendClientMessage(playerid, 0xA6FFA6FF, "ID 28 : UZI (ammo=100$)     ||  ID 29 : MP5 (ammo=100$)     ||  ID 32 : TEC-10 (ammo=100$)");
	        SendClientMessage(playerid, 0xA6FFA6FF, "ID 30 : AK47 (ammo=50$)     ||  ID 31 : M4 (ammo=50$)");
	        SendClientMessage(playerid, 0xA6FFA6FF, "ID 33 : Rifle (ammo=50$)    ||  ID 34 : Sniper (ammo=50$)");
	        SendClientMessage(playerid, 0xFFFFFFFF, "---------------------------------------------------------------------------------------------");
    		return SendClientMessage(playerid, 0xFFFFFFFF, "USAGE: /buygun weaponid ammo");
    	}
    	
    	if(option == 22 || option == 24 || option == 25 || option == 26 || option == 27 || option == 28 || option == 29 || option == 32 || option == 30 || option == 31 || option == 33 || option == 34)
    	{
    		
    		if(GetPlayerMoney(playerid) >= GunPrices[option]*option2)
	        {
	            if(PlayerInfo[playerid][Weapon1] == option )
		        {
		            GivePlayerWeapon(playerid, option, option2);
		            GivePlayerMoney(playerid, -GunPrices[option]*option2);
		            PlayerInfo[playerid][Weapon1] = option;
		        }
		        else if(PlayerInfo[playerid][Weapon2] == option )
		        {
		            GivePlayerWeapon(playerid, option, option2);
		            GivePlayerMoney(playerid, -GunPrices[option]*option2);
		            PlayerInfo[playerid][Weapon2] = option;
		        }
		        else if(PlayerInfo[playerid][Weapon3] == option )
		        {
		            GivePlayerWeapon(playerid, option, option2);
		            GivePlayerMoney(playerid, -GunPrices[option]*option2);
		            PlayerInfo[playerid][Weapon3] = option;
		        }
		        else if((PlayerInfo[playerid][Weapon1] == 22 && option == 24 || PlayerInfo[playerid][Weapon1] == 24 && option == 22) || 
		        	(PlayerInfo[playerid][Weapon1] == 25 && option == 26 || PlayerInfo[playerid][Weapon1] == 25 && option == 27 || PlayerInfo[playerid][Weapon1] == 26 && option == 25 || PlayerInfo[playerid][Weapon1] == 26 && option == 27 || PlayerInfo[playerid][Weapon1] == 27 && option == 25 || PlayerInfo[playerid][Weapon1] == 27 && option == 26) ||
		        	(PlayerInfo[playerid][Weapon1] == 28 && option == 29 || PlayerInfo[playerid][Weapon1] == 28 && option == 32 || PlayerInfo[playerid][Weapon1] == 29 && option == 28 || PlayerInfo[playerid][Weapon1] == 29 && option == 32 || PlayerInfo[playerid][Weapon1] == 32 && option == 28 || PlayerInfo[playerid][Weapon1] == 32 && option == 29) ||
		        	(PlayerInfo[playerid][Weapon1] == 30 && option == 31 || PlayerInfo[playerid][Weapon1] == 31 && option == 30) ||
		        	(PlayerInfo[playerid][Weapon1] == 33 && option == 34 || PlayerInfo[playerid][Weapon1] == 34 && option == 33))
		        {
		        	return SendClientMessage(playerid, -1, "imas vec nesto slicno ljudino");
		        }
		        else if((PlayerInfo[playerid][Weapon2] == 22 && option == 24 || PlayerInfo[playerid][Weapon2] == 24 && option == 22) || 
		        	(PlayerInfo[playerid][Weapon2] == 25 && option == 26 || PlayerInfo[playerid][Weapon2] == 25 && option == 27 || PlayerInfo[playerid][Weapon2] == 26 && option == 25 || PlayerInfo[playerid][Weapon2] == 26 && option == 27 || PlayerInfo[playerid][Weapon2] == 27 && option == 25 || PlayerInfo[playerid][Weapon2] == 27 && option == 26) ||
		        	(PlayerInfo[playerid][Weapon2] == 28 && option == 29 || PlayerInfo[playerid][Weapon2] == 28 && option == 32 || PlayerInfo[playerid][Weapon2] == 29 && option == 28 || PlayerInfo[playerid][Weapon2] == 29 && option == 32 || PlayerInfo[playerid][Weapon2] == 32 && option == 28 || PlayerInfo[playerid][Weapon2] == 32 && option == 29) ||
		        	(PlayerInfo[playerid][Weapon2] == 30 && option == 31 || PlayerInfo[playerid][Weapon2] == 31 && option == 30) ||
		        	(PlayerInfo[playerid][Weapon2] == 33 && option == 34 || PlayerInfo[playerid][Weapon2] == 34 && option == 33))
		        {
		        	return SendClientMessage(playerid, -1, "imas vec nesto slicno ljudino");
		        }	
		        else if((PlayerInfo[playerid][Weapon3] == 22 && option == 24 || PlayerInfo[playerid][Weapon3] == 24 && option == 22) || 
		        	(PlayerInfo[playerid][Weapon3] == 25 && option == 26 || PlayerInfo[playerid][Weapon3] == 25 && option == 27 || PlayerInfo[playerid][Weapon3] == 26 && option == 25 || PlayerInfo[playerid][Weapon3] == 26 && option == 27 || PlayerInfo[playerid][Weapon3] == 27 && option == 25 || PlayerInfo[playerid][Weapon3] == 27 && option == 26) ||
		        	(PlayerInfo[playerid][Weapon3] == 28 && option == 29 || PlayerInfo[playerid][Weapon3] == 28 && option == 32 || PlayerInfo[playerid][Weapon3] == 29 && option == 28 || PlayerInfo[playerid][Weapon3] == 29 && option == 32 || PlayerInfo[playerid][Weapon3] == 32 && option == 28 || PlayerInfo[playerid][Weapon3] == 32 && option == 29) ||
		        	(PlayerInfo[playerid][Weapon3] == 30 && option == 31 || PlayerInfo[playerid][Weapon3] == 31 && option == 30) ||
		        	(PlayerInfo[playerid][Weapon3] == 33 && option == 34 || PlayerInfo[playerid][Weapon3] == 34 && option == 33))
		        {
		        	return SendClientMessage(playerid, -1, "imas vec nesto slicno ljudino");
		        }			 
		        else
		        {
		        	SendClientMessage(playerid, 0xCC0000, "prc!");
		            if(PlayerInfo[playerid][Weapon1] == 0 )
		            {
		                GivePlayerWeapon(playerid, option, option2);
		                GivePlayerMoney(playerid, -GunPrices[option]*option2);
		                return PlayerInfo[playerid][Weapon1] = option;     
		            }
		            else if(PlayerInfo[playerid][Weapon2] == 0 )
		            {
		                GivePlayerWeapon(playerid, option, option2);
		                GivePlayerMoney(playerid, -GunPrices[option]*option2);
		                return PlayerInfo[playerid][Weapon2] = option;     
		            }
		            else if(PlayerInfo[playerid][Weapon3] == 0 )
		            {
		                GivePlayerWeapon(playerid, option, option2);
		                GivePlayerMoney(playerid, -GunPrices[option]*option2);
		                return PlayerInfo[playerid][Weapon3] = option;  
		            }
		            else
		            {
		                SendClientMessage(playerid, 0xCC0000, "Svi slotovi za oruzje su zauzeti!");
		            }
	        	}
	        }
	        else
	        {
	            SendClientMessage(playerid, 0xCC0000, "Nemas dovoljno para!");
	        }
    	}
    	else
    	{
    		SendClientMessage(playerid, 0xCC0000, "ID tog oruzja nije dozvoljen!");
    	}
    }
    else
    {
    	SendClientMessage(playerid, 0xCC0000, "Daleko si!");
    }
    return 1;
}

CMD:buyarmor(playerid)
{
	SetPlayerArmour(playerid, 70.00);
	PlayerInfo[playerid][Armor] = 70.00;
    return 1;
}

CMD:veh1(playerid)
{
	new Float:x, Float:y, Float: z;
    GetPlayerPos(playerid, x, y, z);
    CreateVehicle(487, x+5, y, z, 82.2873, 1, 1, -1);
    return 1;
}

CMD:veh2(playerid)
{
	new Float:x, Float:y, Float: z;
    GetPlayerPos(playerid, x, y, z);
    CreateVehicle(451, x+5, y, z, 82.2873, 1, 1, -1);
    return 1;
}

CMD:veh3(playerid)
{
	new Float:x, Float:y, Float: z;
    GetPlayerPos(playerid, x, y, z);
    CreateVehicle(470, x+5, y, z, 82.2873, 1, 1, -1);
    return 1;
}

CMD:veh4(playerid)
{
	new Float:x, Float:y, Float: z;
    GetPlayerPos(playerid, x, y, z);
    CreateVehicle(522, x+5, y, z, 82.2873, 1, 1, -1);
    return 1;
}
CMD:veh5(playerid)
{
	new Float:x, Float:y, Float: z;
    GetPlayerPos(playerid, x, y, z);
    CreateVehicle(425, x+5, y, z, 82.2873, 1, 1, -1);
    return 1;
}
CMD:veh6(playerid)
{
	new Float:x, Float:y, Float: z;
    GetPlayerPos(playerid, x, y, z);
    CreateVehicle(476, x+5, y, z, 82.2873, 1, 1, -1);
    return 1;
}

CMD:repair(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "You are not in a vehicle!");
    RepairVehicle(GetPlayerVehicleID(playerid));
    SendClientMessage(playerid, 0xFFFFFFFF, "Your vehicle has been repaired!");
    return 1;
}

CMD:buy(playerid, params)
{
    if(InHouseCP[playerid] == -1) return SendClientMessage(playerid, 0xFF0000, "You are not in any house checkpoints!");
    if(HouseInformation[InHouseCP[playerid]][owner][0] != 0) return SendClientMessage(playerid, 0xFF0000, "This house has a owner");
    if(GetPlayerMoney(playerid) < HouseInformation[InHouseCP[playerid]][costprice]) return SendClientMessage(playerid, 0xFF0000, "You don't have enough money!"); //Player has a lack of cash!
    new PlayerName[24];
    GetPlayerName(playerid, PlayerName, 24);
    format(fquery, sizeof(fquery), "SELECT `houseowner` FROM `HOUSEINFO` WHERE `houseowner` = '%s'", PlayerName); //Formats the SELECT query
    queryresult = db_query(database, fquery); //Query result variable has been used to query the string above.
    if(db_num_rows(queryresult) == MAX_HOUSES_PER_PLAYER) return SendClientMessage(playerid, 0xFF0000, "You already have the max amount of houses"); //If the player has the max houses
    db_free_result(queryresult);
    //This is the point where the player can buy the house
    SetOwner(HouseInformation[InHouseCP[playerid]][Hname], PlayerName, InHouseCP[playerid]);
    //SetOwner(HouseName[], ownername[], houseids)
    SetPlayerPos(playerid, HouseInformation[InHouseCP[playerid]][TelePos][0], HouseInformation[InHouseCP[playerid]][TelePos][1], HouseInformation[InHouseCP[playerid]][TelePos][2]); //Sets players position where InHouseCP[playerid] = houseid.
    SetPlayerInterior(playerid, HouseInformation[InHouseCP[playerid]][interiors]); //Sets players interior
    SetPlayerVirtualWorld(playerid, 15500000 + InHouseCP[playerid]); //Sets the virtual world
    GivePlayerMoney(playerid, - HouseInformation[InHouseCP[playerid]][costprice]);
    GameTextForPlayer(playerid, "House ~r~Purchased!", 3000, 3); //Tells them they have purchased a house
    return 1;
}

CMD:sell(playerid, params)
{
    if(InHouse[playerid] == -1) return SendClientMessage(playerid, 0xFF0000, "You have to be inside your house to sell it!");
    new Pname[24];
    GetPlayerName(playerid, Pname, 24);
    if(strcmp(HouseInformation[InHouse[playerid]][owner], Pname) != 0) return SendClientMessage(playerid, 0xFF0000, "This is not your house!");
    //This is the point where the player can sell the house
    DeleteOwner(HouseInformation[InHouse[playerid]][Hname], InHouse[playerid]);
    //DeleteOwner(HouseName[], houseids)
    GivePlayerMoney(playerid, HouseInformation[InHouse[playerid]][sellprice]);
    SetPlayerPos(playerid, HouseInformation[InHouse[playerid]][EnterPos][0], HouseInformation[InHouse[playerid]][EnterPos][1], HouseInformation[InHouse[playerid]][EnterPos][2]);
    SetPlayerInterior(playerid, 0); //Sets the player back to interior 0 (Outside)
    SetPlayerVirtualWorld(playerid, 0); //Sets the players Virtual world to 0.
    InHouseCP[playerid] = InHouse[playerid];
    GameTextForPlayer(playerid, "House ~g~sold!", 3000, 3); //Tells them they have sold a house
    return 1;
}

//komande za testiranje funkcionalnosti
CMD:teleport(playerid)
{
    if(IsPlayerInAnyVehicle(playerid) == 1){
        SetPlayerPos(playerid, 2317.130615, 692.398498, 11.460937);
        SetPlayerVirtualWorld(playerid, 0);  
        new idVozila = GetPlayerVehicleID(playerid);     
        SetVehiclePos(idVozila, 2317.130615, 692.398498, 11.460937);
        PutPlayerInVehicle(playerid, idVozila, 0);
    }else{
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerPos(playerid, 2317.130615, 692.398498, 11.460937);
    }
    return 1; 
}

CMD:teleport2(playerid)
{
    if(IsPlayerInAnyVehicle(playerid) == 1){
        SetPlayerPos(playerid, 2729.1799,-2496.1934,13.6641);
        SetPlayerVirtualWorld(playerid, 0);  
        new idVozila = GetPlayerVehicleID(playerid);     
        SetVehiclePos(idVozila, 2729.1799,-2496.1934,13.6641);
        PutPlayerInVehicle(playerid, idVozila, 0);
    }else{
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerPos(playerid, 2729.1799,-2496.1934,13.6641);
    }
    return 1; 
}

CMD:veh(playerid, params[])
{
	new id;
	if(sscanf(params, "i", id)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /veh <vehicleid>");
	else if(id == INVALID_VEHICLE_ID) SendClientMessage(playerid, 0xFFFF00AA, "Ne postoji to vozilo!");
	else
	{
		new Float:x, Float:y, Float: z;
    	GetPlayerPos(playerid, x, y, z);
    	CreateVehicle(id, x+5, y, z, 82.2873, 1, 1, -1);
	}
	return 1;
}

CMD:eject(playerid, params[])
{
	new id;
	new poruka[MAX_PLAYER_NAME + 23 + 1];
	new imeID[MAX_PLAYER_NAME + 1];
	if(sscanf(params, "u", id)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /eject <playerid>");
	else if(id == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije konektovan");
	else if(IsPlayerInAnyVehicle(playerid) == 1)
	{
		if(GetPlayerState(playerid) == 2 && GetPlayerState(id) == 3)
		{
			if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(id))
			{
				RemovePlayerFromVehicle(id);
				GetPlayerName(id, imeID, sizeof(imeID));
				format(poruka, sizeof(poruka), "%s je izbacen iz vozila", imeID);
				SendClientMessage(playerid, -1, poruka);			
			}
			else return SendClientMessage(playerid, -1, "Igrac nije u vozilu!");
		}
		else SendClientMessage(playerid, -1, "Igrac nije u vozilu!");	
	}	

	return 1;
}

CMD:payday(playerid)
{
	GivePlayerMoney(playerid, 2300000);
	return 1;
}

CMD:paudau(playerid, params)
{
	ResetPlayerMoney(playerid);
	return 1;
}

CMD:goto(playerid, params[])
{
	new id;
	if(sscanf(params, "u", id)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /goto <playerid>");
	else if(id == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije konektovan");
	else if(IsPlayerInAnyVehicle(playerid) == 1){
        GetPlayerPos(id, PosX[id], PosY[id], PosZ[id]); 
        SetPlayerPos(playerid, PosX[id], PosY[id] + 2, PosZ[id]);
        new idVozila = GetPlayerVehicleID(playerid);     
        SetVehiclePos(idVozila, PosX[id] + 5.0, PosY[id], PosZ[id]);
        PutPlayerInVehicle(playerid, idVozila, 0);
    }else{
        GetPlayerPos(id, PosX[id], PosY[id], PosZ[id]);
		SetPlayerPos(playerid, PosX[id], PosY[id] + 2, PosZ[id]);
    }
	
	return 1;
}

CMD:gethere(playerid, params [])
{
	new id;
	if(sscanf(params, "u", id)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /gethere <playerid>");
	else if(id == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije konektovan");
	else if(IsPlayerInAnyVehicle(id) == 1){
        GetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid]); 
        SetPlayerPos(id, PosX[playerid], PosY[playerid], PosZ[playerid]);
        new idVozila = GetPlayerVehicleID(id);     
        SetVehiclePos(idVozila, PosX[playerid] + 5.0, PosY[playerid], PosZ[playerid]);
        PutPlayerInVehicle(id, idVozila, 0);
    }else{

        GetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid]);
		SetPlayerPos(id, PosX[playerid], PosY[playerid], PosZ[playerid]);
    }
    return 1;
}

CMD:givemoney(playerid, params[])
{
	new id;
	new novac;
	if(sscanf(params, "ui", id, novac)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /givemoney <playerid> <amount> ");
	else if(id == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije konektovan");
	else if(GetPlayerMoney(playerid)>=novac)
	{
		GetPlayerPos(id, PosX[id], PosY[id], PosZ[id]);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, PosX[id], PosY[id], PosZ[id]))
		{
			GivePlayerMoney(id, novac);
			GivePlayerMoney(playerid, -novac);
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije dovoljno blizu!");
		}
	}
	else
	{
		SendClientMessage(playerid, 0xFFFF00AA, "Nemas para serotiljo!");
	}
	return 1;
}

CMD:disarm(playerid, params[])
{
	new id;
	if(sscanf(params, "u", id)) SendClientMessage(playerid, 0xFFFF00AA, "Koristi: /disarm <playerid>");
	else if(id == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFFFF00AA, "Igrac nije konektovan");
	else 
	{	
		SendClientMessage(playerid, -1, "Igracu oduzeto oruzje!");
		SendClientMessage(id, -1, "Alo ljudno jebo ti sebe, sta radis!");
		ResetPlayerWeapons(id);
		PlayerInfo[id][Weapon1Ammo] = 0;
		PlayerInfo[id][Weapon2Ammo] = 0;
		PlayerInfo[id][Weapon3Ammo] = 0;
		PlayerInfo[id][Weapon1] = 0;
		PlayerInfo[id][Weapon2] = 0;
	    PlayerInfo[id][Weapon3] = 0;
	}
	return 1;
}

CMD:obijrcma(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2844.4399000,-2514.0000000,12.2000000))
	{
		DestroyObject(katanac1);
		MoveObject(levaVrata1, 2845.2002000,-2514.2002000,12.2000000, 0.5, 0.0000000,0.0000000,62.9950000);
		MoveObject(desnaVrata1, 2843.6699000, -2514.2002000, 12.2000000, 0.5, 0.0000000,0.0000000,297.9950000);
		HangarKontenjer1Timer[playerid] = SetTimerEx("HangarKontenjer1Close", 5000, false, "i", playerid);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2849.6001000,-2467.6001000,12.3000000))
	{
		DestroyObject(katanac2);
		MoveObject(levaVrata2, 2848.7998000, -2467.3994000, 12.3000000, 0.5, 0.0000000,0.0000000,235.2470000);
		MoveObject(desnaVrata2, 2850.2998000, -2467.3994000, 12.3000000, 0.5, 0.0000000,0.0000000,129.9950000);
		HangarKontenjer2Timer[playerid] = SetTimerEx("HangarKontenjer2Close", 5000, false, "i", playerid);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2840.1001000,-2457.8999000,12.3000000))
	{
		DestroyObject(katanac3);
		MoveObject(levaVrata3, 2839.8999000, -2458.7000000, 12.3000000, 0.5, 0.0000000,0.0000000,321.2470000);
		MoveObject(desnaVrata3, 2839.8601000, -2457.2002000, 12.3000000, 0.5, 0.0000000,0.0000000,221.9890000);
		HangarKontenjer3Timer[playerid] = SetTimerEx("HangarKontenjer3Close", 5000, false, "i", playerid);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2844.4399000,-2514.0000000,12.2000000) || IsPlayerInRangeOfPoint(playerid, 5.0, 2844.4399000,-2514.0000000,12.2000000) || IsPlayerInRangeOfPoint(playerid, 5.0, 2844.4399000,-2514.0000000,12.2000000))
	{
		SendClientMessage(playerid, -1, "Deder pridji blize!");
	}
	else{}

	return 1;
}

CMD:kranhak(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2798.2051, -2393.7927, 13.9560))
	{
		if(CrveniKontenjerCheck1 == false)
		{
			CrveniKontenjerCheck1 = true;		
			if(CrveniKontenjerCheck2 == false)
			{
				SendClientMessage(playerid, -1, "Hakuj i drugi racunar!");
				CrveniKontenjerTimer1 = SetTimer("KranHackTimer1", 10000, false);
			} 
			KillTimer(CrveniKontenjerTimer2);
		}	
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2743.9092,-2454.0974,13.8623))
	{
		if(CrveniKontenjerCheck2 == false)
		{
			CrveniKontenjerCheck2 = true;
			if(CrveniKontenjerCheck1 == false)
			{
				SendClientMessage(playerid, -1, "Hakuj i drugi racunar!");
				CrveniKontenjerTimer2 = SetTimer("KranHackTimer2", 10000, false);
			} 
			KillTimer(CrveniKontenjerTimer1);
		}
	}
	if(CrveniKontenjerCheck1 == true && CrveniKontenjerCheck2 == true)
	{
		MoveObject(crveniKontenjer, 2810.8999000, -2437.2000000, 14.1000000, 10.0, 14.0000000, 0.0000000, 86.0000000);
		SendClientMessage(playerid, -1, "Kran je hakovan!");
	}
	return 1;
}

CMD:kranunhak(playerid, params[])
{
	MoveObject(crveniKontenjer, 2811.7002000,-2436.8994000,38.4000000, 20.0, 0.0000000,0.0000000,89.7500000);
	CrveniKontenjerCheck1 = false;
	CrveniKontenjerCheck2 = false;
	return 1;
}

CMD:upalicl(playerid, params[])
{
	if(PlayerCombatInfo[playerid] == false)
	{
		SendClientMessage(playerid, -1, "Upalio si Combat log!");
		PlayerCombatInfo[playerid] = true;
	}
	else SendClientMessage(playerid, -1, "Combat log je vec upaljen!");
	
	return 1;
}

CMD:ugasicl(playerid, params[])
{
	if(PlayerCombatInfo[playerid] == true)
	{
		SendClientMessage(playerid, -1, "Ugasio si Combat log!");
		PlayerCombatInfo[playerid] = false;
	}
	else SendClientMessage(playerid, -1, "Combat log je vec ugasen!");
	return 1;
}

CMD:hakujkapiju(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 0.8, 2720.0000000,-2509.2000000,14.2000000))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Nemeres hakovati iz vozila!");
		MoveObject(hangarUlazKapija1, 2719.8999000,-2499.6001000,12.5000000, 5.0, 0.0000000,0.0000000,90.0000000);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 0.8, 2720.0000000,-2410.8000000,14.1000000))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Nemeres hakovati iz vozila!");
		MoveObject(hangarUlazKapija2, 2719.8999000,-2401.1001000,12.5000000, 5.0, 0.0000000,0.0000000,90.0000000);
	}
	return 1;
}

CMD:zatvorikapiju(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2720.0000000,-2509.2000000,14.2000000))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Nemeres zatvoriti iz vozila!");
		MoveObject(hangarUlazKapija1, 2719.8999000,-2508.3000000,12.5000000, 5.0, 0.0000000,0.0000000,90.0000000);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2720.0000000,-2410.8000000,14.1000000))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Nemeres zatvoriti iz vozila!");
		MoveObject(hangarUlazKapija2, 2719.8999000,-2409.7000000,12.5000000, 5.0, 0.0000000,0.0000000,90.0000000);
	}	
	return 1;
}

//-----------------------------------------------------------------------------------------------------------------------------------------

CMD:kiosk(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2334.8513,720.0639,10.8203))
	{
		ShowMenuForPlayer(menuKiosk, playerid);
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 2334.8513,720.0639,10.8203))
	{
		SendClientMessage(playerid, -1, "Pridji blize kiosku, ne ujedamo");
	}
	
	return 1;
}

CMD:rampa(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 10.0, 2809.8000000, -2383.2000000, 12.3000000))
	{
		rampa1 = CreateObject(3069,2809.8000000,-2383.2000000,12.3000000,14.0000000,0.0000000,265.5000000); //object(d9_ramp) (1)
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 2672.5000000, -2231.3000000, 12.6000000))
	{
		rampa2 = CreateObject(3069,2672.3999000,-2252.8000000,23.3000000,327.0000000,0.0000000,0.0000000); //object(d9_ramp) (1)
		rampa3 = CreateObject(3069,2672.5000000,-2231.3000000,12.6000000,19.9970000,0.0000000,180.2500000); //object(d9_ramp) (3)
	}
	
	return 1;
}

CMD:sklonirampu(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 10.0, 2809.8000000, -2383.2000000, 12.3000000))
	{
		DestroyObject(rampa1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 2672.5000000, -2231.3000000, 12.6000000))
	{
		DestroyObject(rampa2);
		DestroyObject(rampa3);
	}

	return 1;
}

//krajkomandi

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new model = GetVehicleModel(vehicleid);
	if(CarryBox[playerid] == true)
	{
		SendClientMessage(playerid, -1, "Ne moze kutija u vozilu!");
		RemovePlayerFromVehicle(playerid);
		TogglePlayerControllable(playerid,0);
		TogglePlayerControllable(playerid,1);
	}
	if(ispassenger == 0)
	{
		if (model == 417 || model == 425 || model == 447 || model == 460 || model == 469 || model == 476 || model == 487 || model == 488 || model == 497 || model == 511 || 
	    	model == 512 || model == 513 || model == 519 || model == 520 || model == 548 || model == 553 || model == 563 || model == 577 || model == 592 || model == 593)
	    {
	    	SendClientMessage(playerid, -1, "Motor vec upaljen!");
	    	new engine, lights, alarm, doors, bonnet, boot, objective;
	   		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	    	return SetVehicleParamsEx(vehicleid,1, lights, alarm, doors, bonnet, boot, objective);  	
	    }
	} 

    return 1;	
}
 
public OnPlayerExitVehicle(playerid, vehicleid)
{
        return 1;
}
 
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == 5 || newstate == 6 || newstate == 2 || newstate == 3 || oldstate == 5 || oldstate == 6 || oldstate == 2 || oldstate == 3)
	{
		if(CarryBox[playerid] == true)
		{
			SendClientMessage(playerid, -1, "Nemoze kutija u autu, state!");
			return RemovePlayerFromVehicle(playerid);
		}
	}

	if(newstate == 3)
	{
		if(GetPlayerWeapon(playerid) == 24 || GetPlayerWeapon(playerid) == 27)
		{
			if(GetPlayerWeaponData(playerid, 4, PlayerInfo[playerid][Weapon1], PlayerInfo[playerid][Weapon1Ammo]))
			{
				SetPlayerArmedWeapon(playerid, PlayerInfo[playerid][Weapon1]);
			}
			else if(GetPlayerWeaponData(playerid, 4, PlayerInfo[playerid][Weapon2], PlayerInfo[playerid][Weapon2Ammo]))
			{
				SetPlayerArmedWeapon(playerid, PlayerInfo[playerid][Weapon2]);
			}
			else if(GetPlayerWeaponData(playerid, 4, PlayerInfo[playerid][Weapon3], PlayerInfo[playerid][Weapon3Ammo]))
			{
				SetPlayerArmedWeapon(playerid, PlayerInfo[playerid][Weapon3]);
			}
			else
			{
				SendClientMessage(playerid, -1, "Nemere to oruzje u vozilu");
				return SetPlayerArmedWeapon(playerid, 0);	
			}
		}
	}
	return 1;
}

// public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
// {
//     if(response)
//     {
//         SendClientMessage(playerid, -1, "Attached object edition saved.");
 
//         ao[playerid][index][ao_x] = fOffsetX;
//         ao[playerid][index][ao_y] = fOffsetY;
//         ao[playerid][index][ao_z] = fOffsetZ;
//         ao[playerid][index][ao_rx] = fRotX;
//         ao[playerid][index][ao_ry] = fRotY;
//         ao[playerid][index][ao_rz] = fRotZ;
//         ao[playerid][index][ao_sx] = fScaleX;
//         ao[playerid][index][ao_sy] = fScaleY;
//         ao[playerid][index][ao_sz] = fScaleZ;

//         printf("%f, %f, %f, %f, %f, %f, %f, %f, %f", ao[playerid][index][ao_x], ao[playerid][index][ao_y], ao[playerid][index][ao_z], ao[playerid][index][ao_rx], ao[playerid][index][ao_ry], ao[playerid][index][ao_rz], ao[playerid][index][ao_sx], ao[playerid][index][ao_sy], ao[playerid][index][ao_sz]);
//     }
//     else
//     {
//         SendClientMessage(playerid, -1, "Attached object edition not saved.");
 
//         new i = index;
//         SetPlayerAttachedObject(playerid, index, modelid, boneid, ao[playerid][i][ao_x], ao[playerid][i][ao_y], ao[playerid][i][ao_z], ao[playerid][i][ao_rx], ao[playerid][i][ao_ry], ao[playerid][i][ao_rz], ao[playerid][i][ao_sx], ao[playerid][i][ao_sy], ao[playerid][i][ao_sz]);
//     }
//     return 0;
// }
 
public OnPlayerEnterCheckpoint(playerid)
{
        return 1;
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
    for(new x; x<houseid; x++) //Loops through all current house ids.
    {
        if(HouseInformation[x][checkpointidx][0] == checkpointid) //If the entry checkpoint is entry checkpoint.
        {
            if(InHouse[playerid] != -1) 
            {
                InHouse[playerid] = -1; //Sets the player to outside the house.
                return 1;
            }
            InHouseCP[playerid] = x; //Sets the InHouseCP variable.
            new Pname[24]; //Pname variable.
            GetPlayerName(playerid, Pname, 24); //Gets the players name.
            if(HouseInformation[x][owner][0] != 0 && !strcmp(Pname, HouseInformation[x][owner][0]))
            //The line above checks that the owner string has something in it, then it
            //Will compare it to our current player.
            {
                SetPlayerPos(playerid, HouseInformation[x][TelePos][0], HouseInformation[x][TelePos][1], HouseInformation[x][TelePos][2]); //Sets players position where x = houseid.
                SetPlayerInterior(playerid, HouseInformation[x][interiors]); //Sets players interior
                SetPlayerVirtualWorld(playerid, 15500000 + x); //Sets the virtual world
                //This is used if you want multiple houses per interior.
                 //Sets the inhouse variable to the house he's in.
            }
            if(!HouseInformation[x][owner][0]) SendClientMessage(playerid, -1, "This house is for sale /buy to buy it!");
            //If there is no owner, it will send a message telling the player to buy it :).
            return 1;
            //We do this so the loop doesn't continue after or it tries to go for more checkpoints
            //We could alternitivly use break;
        }
        if(HouseInformation[x][checkpointidx][1] == checkpointid) //If the player enters the house exit.
        {
            if(InHouse[playerid] == -1)
            {
                InHouse[playerid] = x;
                return 1;
            }
            SetPlayerPos(playerid, HouseInformation[x][EnterPos][0], HouseInformation[x][EnterPos][1], HouseInformation[x][EnterPos][2]);
            SetPlayerInterior(playerid, 0); //Sets the player back to interior 0 (Outside)
            SetPlayerVirtualWorld(playerid, 0); //Sets the players Virtual world to 0.
            return 1;
            //We do this so the loop doesn't continue after or it tries to go for more checkpoints
            //We could alternitivly use break;
        }
    }
    return 1;
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
    if(InHouseCP[playerid] != - 1) InHouseCP[playerid] = -1; //Sets the players InHouseCP variable to 0.
    return 1;
}
 
public OnPlayerLeaveCheckpoint(playerid)
{
        return 1;
}
 
public OnPlayerEnterRaceCheckpoint(playerid)
{
        return 1;
}
 
public OnPlayerLeaveRaceCheckpoint(playerid)
{
        return 1;
}
 
public OnRconCommand(cmd[])
{
	
    return 1;
}
 
// public OnPlayerRequestSpawn(playerid)
// {
	  
 
//     return 0;
// }
 
public OnObjectMoved(objectid)
{
        return 1;
}
 
public OnPlayerObjectMoved(playerid, objectid)
{
        return 1;
}
 
public OnPlayerPickUpPickup(playerid, pickupid)
{

	return 1;
}
 
public OnVehicleMod(playerid, vehicleid, componentid)
{
        return 1;
}
 
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
        return 1;
}
 
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
        return 1;
}
 
public OnPlayerSelectedMenuRow(playerid, row)
{
	if(GetPlayerMenu(playerid) == menuKiosk)
	{
		switch(row)
		{
			case 0:
			{
				SendClientMessage(playerid, -1, "Kae najacca guska!");
				return TogglePlayerControllable(playerid, 1);
			}			
			case 1:
			{
				SendClientMessage(playerid, -1, "Utebe cugelj isto ovo!");
				return TogglePlayerControllable(playerid, 1);	
			}
			case 2:
			{
				if(PlayerInfo[playerid][Phone] == 0)
				{
					PlayerInfo[playerid][Phone] = 1;
					SendClientMessage(playerid, -1, "Kupio si telefon!");
					return TogglePlayerControllable(playerid, 1);
				}
				else
				{
					SendClientMessage(playerid, -1, "Vec imas telefon!");
					return TogglePlayerControllable(playerid, 1);
				} 										
			}
			case 3:
			{
				if(PlayerInfo[playerid][PhoneNumber] == 0)
				{
					PlayerInfo[playerid][PhoneNumber] = random(999999);
					SendClientMessage(playerid, -1, "Kupio si karticu za telefon!");
					return TogglePlayerControllable(playerid, 1);	
				}
				else 
				{					
					SendClientMessage(playerid, -1, "Vec imas broj!");	
					return TogglePlayerControllable(playerid, 1);
				}	
			}
		}    
	}
	
	return 1;
}
 
public OnPlayerExitedMenu(playerid)
{
	TogglePlayerControllable(playerid, 1);
    return 1;
}
 
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
        return 1;
}
 
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if((newkeys & KEY_CROUCH) && !(oldkeys & KEY_CROUCH))
	{
		if(IsPlayerInRangeOfPoint(playerid, 30.0, 213.7000000, 1875.3000000, 14.2000000)){
			MoveObject(Gate1, 213.8, 1872.7, 15.6, 2.00, 0.00, 91.00, 270.25);
			SendClientMessage(playerid, COL_BLUE, "Kapija je otvorena i zatvorice se nakon 10 sekundi!");
			GateTimer1[playerid] = SetTimerEx("Gateclose1",10000,false,"i",playerid);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, 139.1000100,1942.2000000,20.1000000)){
			MoveObject(Gate2, 145.5000000,1942.2000000,20.1000000, 2.00, 0.0000000,0.0000000,359.5000000);
			MoveObject(Gate3, 124.7000000,1942.4000000,20.1000000, 2.00, 0.0000000,0.0000000,359.5000000);
			SendClientMessage(playerid, COL_BLUE, "Kapija je otvorena i zatvorice se nakon 10 sekundi!");
			GateTimer2[playerid] = SetTimerEx("Gateclose2",10000,false,"i",playerid);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, 285.6000100,1820.8000000,18.4000000)){
			MoveObject(Gate4, 285.6000100,1812.9000000,18.4000000, 2.00, 0.0000000,0.0000000,270.0000000);
			SendClientMessage(playerid, COL_BLUE, "Kapija je otvorena i zatvorice se nakon 10 sekundi!");
			GateTimer3[playerid] = SetTimerEx("Gateclose4",10000,false,"i",playerid);
			return 1;
		}
		
		else if(IsPlayerInRangeOfPoint(playerid, 50.0, 213.7000000, 1875.3000000, 14.2000000) 
			|| IsPlayerInRangeOfPoint(playerid, 50.0, 139.1000100,1942.2000000,20.1000000) 
			|| IsPlayerInRangeOfPoint(playerid, 50.0, 285.6000100,1820.8000000,18.4000000))
		{
			SendClientMessage(playerid, 0xF81414, "Predaleko ste od kapije!");
			return 1;
		}
		else{}
	}
	
	if(newkeys & KEY_SUBMISSION) //Number 2 or + in your keyboard.
    {
    	new vid = GetPlayerVehicleID(playerid);
    	new model = GetVehicleModel(vid);
    	if (model == 417 || model == 425 || model == 447 || model == 460 || model == 469 || model == 476 || model == 487 || model == 488 || model == 497 || model == 511 || 
    		model == 512 || model == 513 || model == 519 || model == 520 || model == 548 || model == 553 || model == 563 || model == 577 || model == 592 || model == 593)
    	{
    		return 1;
    	}
        else if(IsPlayerInAnyVehicle(playerid) == 1 && GetPlayerState(playerid) == 2) // If the player is in any vehicle (I should have done this to state driver but anyways).
        {
            new engine, lights, alarm, doors, bonnet, boot, objective; // Variables to store the status.
             // We need to get players vehicle to get the params.
            GetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, boot, objective); // We need to get vehicle params in order to change them.
            if(engine == 0) // If engine is OFF the code below turns on the engine.
            {
                SetVehicleParamsEx(vid,1,1,alarm,doors,bonnet,boot,objective);
                SendClientMessage(playerid,-1,"You turned ON your vehicle engine and lights.");
                return 1;
            }
            else if(engine == 1) // If the engine is ON so we turn it off.
            {
                SetVehicleParamsEx(vid,0,0,alarm,doors,bonnet,boot,objective);
                SendClientMessage(playerid,-1,"You turned OFF your vehicle engine and lights.");
                return 1;
            }
            else if(engine == -1) // If the params are unset let's take a example when you spawn a car as admin.
            {
                SetVehicleParamsEx(vid,1,1,alarm,doors,bonnet,boot,objective);
            }
        } 
    }
    return 1;
}

forward Gateclose1();
public Gateclose1()
{
	MoveObject(Gate1, 213.7000000, 1875.3000000, 14.2000000, 2.00, 0.000000, 0.000000, 270.0000000);
}
	
forward Gateclose2();
public Gateclose2()
{
	
	MoveObject(Gate2, 139.1000100,1942.2000000,20.1000000, 2.00, 0.0000000,0.0000000,359.5000000);
	MoveObject(Gate3, 131.1000100,1942.3000000,20.1000000, 2.00, 0.0000000,0.0000000,359.5000000);
	
}
forward Gateclose4();
public Gateclose4()
{
	
	MoveObject(Gate4, 285.6000100,1820.8000000,18.4000000, 2.00, 0.0000000,0.0000000,270.0000000);
}
 
forward HangarKontenjer1Close();
public HangarKontenjer1Close()
{
	MoveObject(levaVrata1, 2845.2000000, -2514.2000000, 12.2000000, 1.0, 0.0000000,0.0000000,178.9970000);
	MoveObject(desnaVrata1, 2843.6699000, -2514.2002000, 12.2000000, 1.0, 0.0000000,0.0000000,179.9950000);
	CreateObject(2680,2844.4399000,-2514.0000000,12.2000000,0.0000000,0.0000000,180.0000000);
}

forward HangarKontenjer2Close();
public HangarKontenjer2Close()
{
	MoveObject(levaVrata2, 2848.8000000, -2467.3999000, 12.3000000, 1.0, 0.0000000,0.0000000,1.2500000);
	MoveObject(desnaVrata2, 2850.3000000, -2467.3999000, 12.3000000, 1.0, 0.0000000,0.0000000,359.9950000);
	CreateObject(2680,2849.6001000,-2467.6001000,12.3000000,0.0000000,0.0000000,13.9950000); //object(cj_padlock) (2)
}

forward HangarKontenjer3Close();
public HangarKontenjer3Close()
{
	MoveObject(levaVrata3, 2839.8999000, -2458.7000000, 12.3000000, 1.0, 0.0000000,0.0000000,91.2470000);
	MoveObject(desnaVrata3, 2839.8601000, -2457.2002000, 12.3000000, 1.0, 0.0000000,0.0000000,91.9890000);
	CreateObject(2680,2840.1001000,-2457.8999000,12.3000000,0.0000000,0.0000000,113.9910000); //object(cj_padlock) (3)
}

public OnRconLoginAttempt(ip[], password[], success)
{
        return 1;
}
 
forward LoseHealth(playerid);
public LoseHealth(playerid)
{
    new Float:health;
    GetPlayerHealth(playerid,health);
    SetPlayerHealth(playerid,health-5.0);
}
 
public OnPlayerUpdate(playerid)
{
	
    if (Injured[playerid] == 1 && GetPlayerAnimationIndex(playerid) != 386)
    {
        ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 1, 0, 1);
    }
    
    return 1;
}	
 
public OnPlayerStreamIn(playerid, forplayerid)
{
        return 1;
}
 
public OnPlayerStreamOut(playerid, forplayerid)
{
        return 1;
}
 
public OnVehicleStreamIn(vehicleid, forplayerid)
{
        return 1;
}
 
public OnVehicleStreamOut(vehicleid, forplayerid)
{
        return 1;
}
 
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	switch(dialogid)
	{
		case DIALOG_REGISTER:
		{
			if(strlen(inputtext) < 6 || strlen(inputtext) > 24)
			{
				SendClientMessage(playerid, -1, "Lozinka mora biti najmanje 6 i najvise 24 karaktera!");
				ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD,""COL_WHITE"Registering...",""COL_WHITE"Type your password below to register a new account.","Register","Quit");
				return 0;
			}
			else
			{
				new str[1024];
				SHA256_PassHash(inputtext, GetName(playerid), PlayerInfo[playerid][Password], 65);
				mysql_format(Database, str, sizeof(str), "INSERT INTO `users` (`Name`, `Password`, `Score`, `Cash`, `Admin`, `Skin`, `Kills`, `Deaths`, `Armor`, `Weapon1`, `Weapon2`, `Weapon3`, `Weapon1Ammo`, `Weapon2Ammo`, `Weapon3Ammo`, `Job`, `JobActivity`, `Phone`, `PhoneNumber`, `CoordinateX`, `CoordinateY`, `CoordinateZ`, `Angle`, `Interior`, `VirtualWorld`) VALUES ('%e', '%s', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0')", PlayerInfo[playerid][Name], PlayerInfo[playerid][Password]);
				mysql_tquery(Database, str);
				SetPlayerSkin(playerid, 121);
				SetSpawnInfo(playerid, 255, 121, 1958.3783, 1343.1572, 15.3746, 269.15, 0, 0, 0, 0, 0, 0);
                SpawnPlayer(playerid);
                SetPlayerScore(playerid, PlayerInfo[playerid][Score]);
			}
		}
		case DIALOG_LOGIN:
		{
			if(strlen(inputtext) < 6 || strlen(inputtext) > 24)
			{
				SendClientMessage(playerid, -1, "Lozinka mora biti najmanje 6 i najvise 24 karaktera!");
				ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD,""COL_WHITE"Login",""COL_WHITE"Type your password below to login.","Login","Quit");
				return 0;
			}
			else
			{
				new str[1024], accpass[65];
				SHA256_PassHash(accpass, GetName(playerid), PlayerInfo[playerid][Password], sizeof(accpass));
				if(strcmp(accpass, PlayerInfo[playerid][Password]) != 0)
				{
					PogresnaLozinka[playerid]++;
					if(PogresnaLozinka[playerid] == 3)
					{
						Kick(playerid);
					}
					else
					{
						SendClientMessage(playerid, -1, "Pogresna lozinka, pokusajte ponovo!");
						ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD,""COL_WHITE"Login",""COL_WHITE"Type your password below to login.","Login","Quit");
						return 0;
					}
				}
				mysql_format(Database, str, sizeof(str), "SELECT * FROM `users` WHERE `Name` = '%e' LIMIT 1", PlayerInfo[playerid][Name]);
				mysql_tquery(Database, str, "LoadAccount", "i", playerid);
				//GivePlayerMoney(playerid, PlayerInfo[playerid][Cash]);
				SetPlayerSkin(playerid, PlayerInfo[playerid][Skin]);
                SetSpawnInfo(playerid, 255, PlayerInfo[playerid][Skin], PosX[playerid], PosY[playerid], PosZ[playerid], Angle[playerid], PlayerInfo[playerid][Weapon1], PlayerInfo[playerid][Weapon1Ammo], PlayerInfo[playerid][Weapon2], PlayerInfo[playerid][Weapon2Ammo], PlayerInfo[playerid][Weapon3], PlayerInfo[playerid][Weapon3Ammo]);
        		SpawnPlayer(playerid);
	
			}
		}
	}
    
    return 1;
}

forward LoadAccount(playerid);
public LoadAccount(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 0;
	else 
	{
		cache_get_value_int(0,"ID", PlayerInfo[playerid][ID]);
		cache_get_value_int(0,"Score", PlayerInfo[playerid][Score]);
		cache_get_value_int(0,"Cash", PlayerInfo[playerid][Cash]);
		cache_get_value_int(0,"Admin", PlayerInfo[playerid][Admin]);
		cache_get_value_int(0,"Skin", PlayerInfo[playerid][Skin]);
		cache_get_value_int(0,"Kills", PlayerInfo[playerid][Kills]);
		cache_get_value_int(0,"Deaths", PlayerInfo[playerid][Deaths]);
		cache_get_value_float(0,"Armor", PlayerInfo[playerid][Armor]);
		cache_get_value_int(0,"Weapon1", PlayerInfo[playerid][Weapon1]);
		cache_get_value_int(0,"Weapon2", PlayerInfo[playerid][Weapon2]);
		cache_get_value_int(0,"Weapon3", PlayerInfo[playerid][Weapon3]);
		cache_get_value_int(0,"Weapon1Ammo", PlayerInfo[playerid][Weapon1Ammo]);
		cache_get_value_int(0,"Weapon2Ammo", PlayerInfo[playerid][Weapon2Ammo]);
		cache_get_value_int(0,"Weapon3Ammo", PlayerInfo[playerid][Weapon3Ammo]);
		cache_get_value_int(0,"Job", PlayerInfo[playerid][Job]);
		cache_get_value_int(0,"JobActivity", PlayerInfo[playerid][JobActivity]);
		cache_get_value_int(0,"Phone", PlayerInfo[playerid][Phone]);
		cache_get_value_int(0,"PhoneNumber", PlayerInfo[playerid][PhoneNumber]);

		cache_get_value_float(0,"CoordinateX", PosX[playerid]);
		cache_get_value_float(0,"CoordinateY", PosY[playerid]);
		cache_get_value_float(0,"CoordinateZ", PosZ[playerid]);
		cache_get_value_float(0,"Angle", Angle[playerid]);
		cache_get_value_int(0,"Interior", Interior[playerid]);
		cache_get_value_int(0,"VirtualWorld", VirtualWorld[playerid]);
	}
	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	new Float:disX, Float:disY, Float:disZ, Float:distance;
	GetPlayerPos(playerid, disX, disY, disZ);
	distance = GetPlayerDistanceFromPoint(issuerid, disX, disY, disZ);
    if(issuerid != INVALID_PLAYER_ID && weaponid == 34 && bodypart == 9)
    {
        // One shot to the head to kill with sniper rifle
        SetPlayerHealth(playerid, 0.0);
        // SendClientMessage(playerid, -1, "Pogodjen si u glavi!");
        // SendClientMessage(issuerid, -1, "Pogodio si u glavi!");
        GameTextForPlayer(playerid, "~n~~r~Pogodjen si u glavi!", 3000, 6);
        GameTextForPlayer(issuerid, "~n~~g~Pogodio si u glavi!", 3000, 6);
    }
    else if(issuerid != INVALID_PLAYER_ID) // If not self-inflicted
    {
        new
            infoString1[128],
            infoString2[128],
            weaponName[24],
            victimName[MAX_PLAYER_NAME],
            attackerName[MAX_PLAYER_NAME];
 
        GetPlayerName(playerid, victimName, sizeof (victimName));
        GetPlayerName(issuerid, attackerName, sizeof (attackerName));
 
        GetWeaponName(weaponid, weaponName, sizeof (weaponName));
 		if(PlayerCombatInfo[playerid] == true)
 		{
 			format(infoString1, sizeof(infoString1), "%s te skucao za %.0f demidza, oruzjem: %s, sa razdaljine od: %.0f metara, deo tela: %d", attackerName, amount, weaponName, distance, bodypart);
 			SendClientMessage(playerid, -1, infoString1);
 		}
 		if(PlayerCombatInfo[issuerid] == true)
 		{
 			format(infoString2, sizeof(infoString2), "%s si skucao za %.0f demidza, oruzjem: %s, sa razdaljine od: %.0f metara, deo tela: %d", victimName, amount, weaponName, distance, bodypart); 
        	SendClientMessage(issuerid, -1, infoString2);
 		}   
    }
    return 1;
}

// public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
// {

// 	return 1;
// }

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	new message[59 + MAX_PLAYER_NAME];
	new name[MAX_PLAYER_NAME];

	GetPlayerName(clickedplayerid, name, sizeof(name));
    format(message, sizeof(message), "Kliknuo si na igraca ID: %d, Ime: %s, Broj telefona: %d", clickedplayerid, name, PlayerInfo[clickedplayerid][PhoneNumber]);
    SendClientMessage(playerid, 0xFFFFFFFF, message);
    return 1;
}

// strtok(const string[], &index)
// {
//         new length = strlen(string);
//         while ((index < length) && (string[index] <= ' '))
//         {
//                 index++;
//         }
 
//         new offset = index;
//         new result[20];
//         while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
//         {
//                 result[index - offset] = string[index];
//                 index++;
//         }
//         result[index - offset] = EOS;
//         return result;
// }

stock SavePlayer(playerid)
{
	GetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid]);
    GetPlayerFacingAngle(playerid, Angle[playerid]);
    new playerskin = GetPlayerSkin(playerid);
    PlayerInfo[playerid][Skin] = playerskin;
    //U 2D niz weapons su smesteni podaci o svim oruzjima koje igrac drzi u ruci
    //ID-oruzja    Ammo
    new weapons[13][2];
    for(new i = 0; i <= 12; i++){
        GetPlayerWeaponData(playerid, i, weapons[i][0], weapons[i][1]);
    }
    new guns[3], ammo[3];
    new z = 0;
    //Kad se izvrsi for petlja, u nizu guns nalazice se ID-ovi oruzja, u nizu ammo, broj metaka
    //po istom redosledu po kojem su ID-ovi oruzja uneseni u niz guns
    for(new i = 0; i < 13; i++){
        if(weapons[i][0] > 0){
            guns[z] = weapons[i][0];
            ammo[z] = weapons[i][1];
            z++;
        }else{

        }
    }
   
    CarryBox[playerid] = false;
    RemovePlayerAttachedObject(playerid, 0);
    SetPlayerSpecialAction(playerid, 0);

    PlayerInfo[playerid][Weapon1] = guns[0];
    PlayerInfo[playerid][Weapon2] = guns[1];
    PlayerInfo[playerid][Weapon3] = guns[2];

    PlayerInfo[playerid][Weapon1Ammo] = ammo[0];
    PlayerInfo[playerid][Weapon2Ammo] = ammo[1];
    PlayerInfo[playerid][Weapon3Ammo] = ammo[2];

    new Float:armour;
    GetPlayerArmour(playerid, armour);
    PlayerInfo[playerid][Armor] = 0.0;
    PlayerInfo[playerid][Armor] = armour;

    new money;
    money = GetPlayerMoney(playerid);
    PlayerInfo[playerid][Cash] = money;

	new str[1024];
	//mysql_format(Database, str, sizeof(str), "UPDATE `users` SET `Score` = %d WHERE `ID` = %d LIMIT 1", PlayerInfo[playerid][Score], PlayerInfo[playerid][ID]);
	mysql_format(Database, str, sizeof(str), "UPDATE `users` SET `Score` = '%d', `Cash` = '%d', `Admin` = '%d', `Skin` = '%d', `Kills` = '%d', `Deaths` = '%d', `Armor` = '%f', `Weapon1` = '%d', `Weapon2` = '%d', `Weapon3` = '%d', `Weapon1Ammo` = '%d', `Weapon2Ammo` = '%d', `Weapon3Ammo` = '%d', `Job` = '%d', `JobActivity` = '%d', `Phone` = '%d', `PhoneNumber` = '%d', `CoordinateX` = '%f', `CoordinateY` = '%f', `CoordinateZ` = '%f', `Angle` = '%f', `Interior` = '%d', `VirtualWorld` = '%d' WHERE `ID` = '%d' LIMIT 1", PlayerInfo[playerid][Score], PlayerInfo[playerid][Cash], PlayerInfo[playerid][Admin], PlayerInfo[playerid][Skin], PlayerInfo[playerid][Kills], PlayerInfo[playerid][Deaths], PlayerInfo[playerid][Armor], PlayerInfo[playerid][Weapon1], PlayerInfo[playerid][Weapon2], PlayerInfo[playerid][Weapon3], PlayerInfo[playerid][Weapon1Ammo], PlayerInfo[playerid][Weapon2Ammo], PlayerInfo[playerid][Weapon3Ammo], PlayerInfo[playerid][Job], PlayerInfo[playerid][JobActivity], PlayerInfo[playerid][Phone], PlayerInfo[playerid][PhoneNumber], PosX[playerid], PosY[playerid], PosZ[playerid], Angle[playerid], Interior[playerid], VirtualWorld[playerid], PlayerInfo[playerid][ID]);
	mysql_tquery(Database,str);
	return 1;
}

stock GetName(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	return name;
}

forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5){
    if(IsPlayerConnected(playerid)){
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        foreach(new i : Player){
            if(IsPlayerConnected(i)){
                if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)){
                    GetPlayerPos(i, posx, posy, posz);
                    tempposx = (oldposx -posx);
                    tempposy = (oldposy -posy);
                    tempposz = (oldposz -posz);
                    if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))){
                        SendClientMessage(i, col1, string);
                    }
                    else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))){
                        SendClientMessage(i, col2, string);
                    }
                    else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))){
                        SendClientMessage(i, col3, string);
                    }
                    else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))){
                        SendClientMessage(i, col4, string);
                    }
                    else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))){
                        SendClientMessage(i, col5, string);
                    }
            }   }
        }
    }
    return 1;
}

//--------------TIMERI----------------

forward CanAcceptDeath(playerid);
public CanAcceptDeath(playerid)
{
    AcceptDeath[playerid] = 1;
    SendClientMessage(playerid, COLOR_GRAY, "You can now accept death.");
}
 
forward HospitalTimer(playerid);
public HospitalTimer(playerid)
{
    Hospitalized[playerid] = 0;
    SendClientMessage(playerid, -1, "You have recovered at the All Saints General Hospital.");
    SetPlayerPos(playerid, 1178.4012, -1323.2754, 14.1183);
    SetPlayerFacingAngle(playerid, 270.0);
    SetCameraBehindPlayer(playerid);
    SetPlayerHealth(playerid, 100.0);
    TogglePlayerControllable(playerid,1);
}
forward KranHackTimer1();
public KranHackTimer1()
{
	if(CrveniKontenjerCheck1 == true) CrveniKontenjerCheck1 = false;
	if(CrveniKontenjerCheck2 == true) CrveniKontenjerCheck2 = false;
	SendClientMessage(0, -1, "Nisi stigao da hakujes drugi!");
}

forward KranHackTimer2();
public KranHackTimer2()
{
	if(CrveniKontenjerCheck1 == true) CrveniKontenjerCheck1 = false;
	if(CrveniKontenjerCheck2 == true) CrveniKontenjerCheck2 = false;
	SendClientMessage(0, -1, "Nisi stigao da hakujes prvi!");
}